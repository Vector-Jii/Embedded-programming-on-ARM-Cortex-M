
SVC_number.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001218  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000050  080013a8  080013a8  000023a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080013f8  080013f8  0000305c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  080013f8  080013f8  000023f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001400  08001400  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001400  08001400  00002400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001404  08001404  00002404  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001408  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000305c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0000305c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0000305c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000914  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000305  00000000  00000000  000039a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000118  00000000  00000000  00003ca8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000be  00000000  00000000  00003dc0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000998  00000000  00000000  00003e7e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00000445  00000000  00000000  00004816  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00004c5b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b44  00000000  00000000  00004ca0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004c  00000000  00000000  000057e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000005c 	.word	0x2000005c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08001390 	.word	0x08001390

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000060 	.word	0x20000060
 80001cc:	08001390 	.word	0x08001390

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000270:	b580      	push	{r7, lr}
 8000272:	af00      	add	r7, sp, #0
	printf("hello world \n");
 8000274:	4803      	ldr	r0, [pc, #12]	@ (8000284 <main+0x14>)
 8000276:	f000 fa29 	bl	80006cc <puts>
	printf("fuck you ");
 800027a:	4803      	ldr	r0, [pc, #12]	@ (8000288 <main+0x18>)
 800027c:	f000 f9be 	bl	80005fc <iprintf>
    /* Loop forever */
	for(;;);
 8000280:	bf00      	nop
 8000282:	e7fd      	b.n	8000280 <main+0x10>
 8000284:	080013a8 	.word	0x080013a8
 8000288:	080013b8 	.word	0x080013b8

0800028c <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 800028c:	b480      	push	{r7}
 800028e:	b083      	sub	sp, #12
 8000290:	af00      	add	r7, sp, #0
 8000292:	4603      	mov	r3, r0
 8000294:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 8000296:	4b0f      	ldr	r3, [pc, #60]	@ (80002d4 <ITM_SendChar+0x48>)
 8000298:	681b      	ldr	r3, [r3, #0]
 800029a:	4a0e      	ldr	r2, [pc, #56]	@ (80002d4 <ITM_SendChar+0x48>)
 800029c:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80002a0:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80002a2:	4b0d      	ldr	r3, [pc, #52]	@ (80002d8 <ITM_SendChar+0x4c>)
 80002a4:	681b      	ldr	r3, [r3, #0]
 80002a6:	4a0c      	ldr	r2, [pc, #48]	@ (80002d8 <ITM_SendChar+0x4c>)
 80002a8:	f043 0301 	orr.w	r3, r3, #1
 80002ac:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80002ae:	bf00      	nop
 80002b0:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002b4:	681b      	ldr	r3, [r3, #0]
 80002b6:	f003 0301 	and.w	r3, r3, #1
 80002ba:	2b00      	cmp	r3, #0
 80002bc:	d0f8      	beq.n	80002b0 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80002be:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 80002c2:	79fb      	ldrb	r3, [r7, #7]
 80002c4:	6013      	str	r3, [r2, #0]
}
 80002c6:	bf00      	nop
 80002c8:	370c      	adds	r7, #12
 80002ca:	46bd      	mov	sp, r7
 80002cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002d0:	4770      	bx	lr
 80002d2:	bf00      	nop
 80002d4:	e000edfc 	.word	0xe000edfc
 80002d8:	e0000e00 	.word	0xe0000e00

080002dc <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002dc:	b580      	push	{r7, lr}
 80002de:	b086      	sub	sp, #24
 80002e0:	af00      	add	r7, sp, #0
 80002e2:	60f8      	str	r0, [r7, #12]
 80002e4:	60b9      	str	r1, [r7, #8]
 80002e6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002e8:	2300      	movs	r3, #0
 80002ea:	617b      	str	r3, [r7, #20]
 80002ec:	e00a      	b.n	8000304 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002ee:	f3af 8000 	nop.w
 80002f2:	4601      	mov	r1, r0
 80002f4:	68bb      	ldr	r3, [r7, #8]
 80002f6:	1c5a      	adds	r2, r3, #1
 80002f8:	60ba      	str	r2, [r7, #8]
 80002fa:	b2ca      	uxtb	r2, r1
 80002fc:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002fe:	697b      	ldr	r3, [r7, #20]
 8000300:	3301      	adds	r3, #1
 8000302:	617b      	str	r3, [r7, #20]
 8000304:	697a      	ldr	r2, [r7, #20]
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	429a      	cmp	r2, r3
 800030a:	dbf0      	blt.n	80002ee <_read+0x12>
  }

  return len;
 800030c:	687b      	ldr	r3, [r7, #4]
}
 800030e:	4618      	mov	r0, r3
 8000310:	3718      	adds	r7, #24
 8000312:	46bd      	mov	sp, r7
 8000314:	bd80      	pop	{r7, pc}

08000316 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000316:	b580      	push	{r7, lr}
 8000318:	b086      	sub	sp, #24
 800031a:	af00      	add	r7, sp, #0
 800031c:	60f8      	str	r0, [r7, #12]
 800031e:	60b9      	str	r1, [r7, #8]
 8000320:	607a      	str	r2, [r7, #4]
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000322:	2300      	movs	r3, #0
 8000324:	617b      	str	r3, [r7, #20]
 8000326:	e009      	b.n	800033c <_write+0x26>
  {
   // __io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000328:	68bb      	ldr	r3, [r7, #8]
 800032a:	1c5a      	adds	r2, r3, #1
 800032c:	60ba      	str	r2, [r7, #8]
 800032e:	781b      	ldrb	r3, [r3, #0]
 8000330:	4618      	mov	r0, r3
 8000332:	f7ff ffab 	bl	800028c <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000336:	697b      	ldr	r3, [r7, #20]
 8000338:	3301      	adds	r3, #1
 800033a:	617b      	str	r3, [r7, #20]
 800033c:	697a      	ldr	r2, [r7, #20]
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	429a      	cmp	r2, r3
 8000342:	dbf1      	blt.n	8000328 <_write+0x12>
  }
  return len;
 8000344:	687b      	ldr	r3, [r7, #4]
}
 8000346:	4618      	mov	r0, r3
 8000348:	3718      	adds	r7, #24
 800034a:	46bd      	mov	sp, r7
 800034c:	bd80      	pop	{r7, pc}

0800034e <_close>:

int _close(int file)
{
 800034e:	b480      	push	{r7}
 8000350:	b083      	sub	sp, #12
 8000352:	af00      	add	r7, sp, #0
 8000354:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000356:	f04f 33ff 	mov.w	r3, #4294967295
}
 800035a:	4618      	mov	r0, r3
 800035c:	370c      	adds	r7, #12
 800035e:	46bd      	mov	sp, r7
 8000360:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000364:	4770      	bx	lr

08000366 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000366:	b480      	push	{r7}
 8000368:	b083      	sub	sp, #12
 800036a:	af00      	add	r7, sp, #0
 800036c:	6078      	str	r0, [r7, #4]
 800036e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000370:	683b      	ldr	r3, [r7, #0]
 8000372:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000376:	605a      	str	r2, [r3, #4]
  return 0;
 8000378:	2300      	movs	r3, #0
}
 800037a:	4618      	mov	r0, r3
 800037c:	370c      	adds	r7, #12
 800037e:	46bd      	mov	sp, r7
 8000380:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000384:	4770      	bx	lr

08000386 <_isatty>:

int _isatty(int file)
{
 8000386:	b480      	push	{r7}
 8000388:	b083      	sub	sp, #12
 800038a:	af00      	add	r7, sp, #0
 800038c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800038e:	2301      	movs	r3, #1
}
 8000390:	4618      	mov	r0, r3
 8000392:	370c      	adds	r7, #12
 8000394:	46bd      	mov	sp, r7
 8000396:	f85d 7b04 	ldr.w	r7, [sp], #4
 800039a:	4770      	bx	lr

0800039c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800039c:	b480      	push	{r7}
 800039e:	b085      	sub	sp, #20
 80003a0:	af00      	add	r7, sp, #0
 80003a2:	60f8      	str	r0, [r7, #12]
 80003a4:	60b9      	str	r1, [r7, #8]
 80003a6:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003a8:	2300      	movs	r3, #0
}
 80003aa:	4618      	mov	r0, r3
 80003ac:	3714      	adds	r7, #20
 80003ae:	46bd      	mov	sp, r7
 80003b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b4:	4770      	bx	lr
	...

080003b8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003b8:	b580      	push	{r7, lr}
 80003ba:	b086      	sub	sp, #24
 80003bc:	af00      	add	r7, sp, #0
 80003be:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003c0:	4a14      	ldr	r2, [pc, #80]	@ (8000414 <_sbrk+0x5c>)
 80003c2:	4b15      	ldr	r3, [pc, #84]	@ (8000418 <_sbrk+0x60>)
 80003c4:	1ad3      	subs	r3, r2, r3
 80003c6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003c8:	697b      	ldr	r3, [r7, #20]
 80003ca:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003cc:	4b13      	ldr	r3, [pc, #76]	@ (800041c <_sbrk+0x64>)
 80003ce:	681b      	ldr	r3, [r3, #0]
 80003d0:	2b00      	cmp	r3, #0
 80003d2:	d102      	bne.n	80003da <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003d4:	4b11      	ldr	r3, [pc, #68]	@ (800041c <_sbrk+0x64>)
 80003d6:	4a12      	ldr	r2, [pc, #72]	@ (8000420 <_sbrk+0x68>)
 80003d8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003da:	4b10      	ldr	r3, [pc, #64]	@ (800041c <_sbrk+0x64>)
 80003dc:	681a      	ldr	r2, [r3, #0]
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	4413      	add	r3, r2
 80003e2:	693a      	ldr	r2, [r7, #16]
 80003e4:	429a      	cmp	r2, r3
 80003e6:	d207      	bcs.n	80003f8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003e8:	f000 fa9e 	bl	8000928 <__errno>
 80003ec:	4603      	mov	r3, r0
 80003ee:	220c      	movs	r2, #12
 80003f0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003f2:	f04f 33ff 	mov.w	r3, #4294967295
 80003f6:	e009      	b.n	800040c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003f8:	4b08      	ldr	r3, [pc, #32]	@ (800041c <_sbrk+0x64>)
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003fe:	4b07      	ldr	r3, [pc, #28]	@ (800041c <_sbrk+0x64>)
 8000400:	681a      	ldr	r2, [r3, #0]
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	4413      	add	r3, r2
 8000406:	4a05      	ldr	r2, [pc, #20]	@ (800041c <_sbrk+0x64>)
 8000408:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800040a:	68fb      	ldr	r3, [r7, #12]
}
 800040c:	4618      	mov	r0, r3
 800040e:	3718      	adds	r7, #24
 8000410:	46bd      	mov	sp, r7
 8000412:	bd80      	pop	{r7, pc}
 8000414:	20020000 	.word	0x20020000
 8000418:	00000400 	.word	0x00000400
 800041c:	20000078 	.word	0x20000078
 8000420:	200001c8 	.word	0x200001c8

08000424 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000424:	480d      	ldr	r0, [pc, #52]	@ (800045c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000426:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000428:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800042c:	480c      	ldr	r0, [pc, #48]	@ (8000460 <LoopForever+0x6>)
  ldr r1, =_edata
 800042e:	490d      	ldr	r1, [pc, #52]	@ (8000464 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000430:	4a0d      	ldr	r2, [pc, #52]	@ (8000468 <LoopForever+0xe>)
  movs r3, #0
 8000432:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000434:	e002      	b.n	800043c <LoopCopyDataInit>

08000436 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000436:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000438:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800043a:	3304      	adds	r3, #4

0800043c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800043c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800043e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000440:	d3f9      	bcc.n	8000436 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000442:	4a0a      	ldr	r2, [pc, #40]	@ (800046c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000444:	4c0a      	ldr	r4, [pc, #40]	@ (8000470 <LoopForever+0x16>)
  movs r3, #0
 8000446:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000448:	e001      	b.n	800044e <LoopFillZerobss>

0800044a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800044a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800044c:	3204      	adds	r2, #4

0800044e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800044e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000450:	d3fb      	bcc.n	800044a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000452:	f000 fa6f 	bl	8000934 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000456:	f7ff ff0b 	bl	8000270 <main>

0800045a <LoopForever>:

LoopForever:
  b LoopForever
 800045a:	e7fe      	b.n	800045a <LoopForever>
  ldr   r0, =_estack
 800045c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000460:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000464:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000468:	08001408 	.word	0x08001408
  ldr r2, =_sbss
 800046c:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000470:	200001c8 	.word	0x200001c8

08000474 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000474:	e7fe      	b.n	8000474 <ADC_IRQHandler>
	...

08000478 <std>:
 8000478:	2300      	movs	r3, #0
 800047a:	b510      	push	{r4, lr}
 800047c:	4604      	mov	r4, r0
 800047e:	e9c0 3300 	strd	r3, r3, [r0]
 8000482:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000486:	6083      	str	r3, [r0, #8]
 8000488:	8181      	strh	r1, [r0, #12]
 800048a:	6643      	str	r3, [r0, #100]	@ 0x64
 800048c:	81c2      	strh	r2, [r0, #14]
 800048e:	6183      	str	r3, [r0, #24]
 8000490:	4619      	mov	r1, r3
 8000492:	2208      	movs	r2, #8
 8000494:	305c      	adds	r0, #92	@ 0x5c
 8000496:	f000 f9f9 	bl	800088c <memset>
 800049a:	4b0d      	ldr	r3, [pc, #52]	@ (80004d0 <std+0x58>)
 800049c:	6263      	str	r3, [r4, #36]	@ 0x24
 800049e:	4b0d      	ldr	r3, [pc, #52]	@ (80004d4 <std+0x5c>)
 80004a0:	62a3      	str	r3, [r4, #40]	@ 0x28
 80004a2:	4b0d      	ldr	r3, [pc, #52]	@ (80004d8 <std+0x60>)
 80004a4:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80004a6:	4b0d      	ldr	r3, [pc, #52]	@ (80004dc <std+0x64>)
 80004a8:	6323      	str	r3, [r4, #48]	@ 0x30
 80004aa:	4b0d      	ldr	r3, [pc, #52]	@ (80004e0 <std+0x68>)
 80004ac:	6224      	str	r4, [r4, #32]
 80004ae:	429c      	cmp	r4, r3
 80004b0:	d006      	beq.n	80004c0 <std+0x48>
 80004b2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80004b6:	4294      	cmp	r4, r2
 80004b8:	d002      	beq.n	80004c0 <std+0x48>
 80004ba:	33d0      	adds	r3, #208	@ 0xd0
 80004bc:	429c      	cmp	r4, r3
 80004be:	d105      	bne.n	80004cc <std+0x54>
 80004c0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80004c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004c8:	f000 ba58 	b.w	800097c <__retarget_lock_init_recursive>
 80004cc:	bd10      	pop	{r4, pc}
 80004ce:	bf00      	nop
 80004d0:	080006dd 	.word	0x080006dd
 80004d4:	080006ff 	.word	0x080006ff
 80004d8:	08000737 	.word	0x08000737
 80004dc:	0800075b 	.word	0x0800075b
 80004e0:	2000007c 	.word	0x2000007c

080004e4 <stdio_exit_handler>:
 80004e4:	4a02      	ldr	r2, [pc, #8]	@ (80004f0 <stdio_exit_handler+0xc>)
 80004e6:	4903      	ldr	r1, [pc, #12]	@ (80004f4 <stdio_exit_handler+0x10>)
 80004e8:	4803      	ldr	r0, [pc, #12]	@ (80004f8 <stdio_exit_handler+0x14>)
 80004ea:	f000 b869 	b.w	80005c0 <_fwalk_sglue>
 80004ee:	bf00      	nop
 80004f0:	20000000 	.word	0x20000000
 80004f4:	08001219 	.word	0x08001219
 80004f8:	20000010 	.word	0x20000010

080004fc <cleanup_stdio>:
 80004fc:	6841      	ldr	r1, [r0, #4]
 80004fe:	4b0c      	ldr	r3, [pc, #48]	@ (8000530 <cleanup_stdio+0x34>)
 8000500:	4299      	cmp	r1, r3
 8000502:	b510      	push	{r4, lr}
 8000504:	4604      	mov	r4, r0
 8000506:	d001      	beq.n	800050c <cleanup_stdio+0x10>
 8000508:	f000 fe86 	bl	8001218 <_fflush_r>
 800050c:	68a1      	ldr	r1, [r4, #8]
 800050e:	4b09      	ldr	r3, [pc, #36]	@ (8000534 <cleanup_stdio+0x38>)
 8000510:	4299      	cmp	r1, r3
 8000512:	d002      	beq.n	800051a <cleanup_stdio+0x1e>
 8000514:	4620      	mov	r0, r4
 8000516:	f000 fe7f 	bl	8001218 <_fflush_r>
 800051a:	68e1      	ldr	r1, [r4, #12]
 800051c:	4b06      	ldr	r3, [pc, #24]	@ (8000538 <cleanup_stdio+0x3c>)
 800051e:	4299      	cmp	r1, r3
 8000520:	d004      	beq.n	800052c <cleanup_stdio+0x30>
 8000522:	4620      	mov	r0, r4
 8000524:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000528:	f000 be76 	b.w	8001218 <_fflush_r>
 800052c:	bd10      	pop	{r4, pc}
 800052e:	bf00      	nop
 8000530:	2000007c 	.word	0x2000007c
 8000534:	200000e4 	.word	0x200000e4
 8000538:	2000014c 	.word	0x2000014c

0800053c <global_stdio_init.part.0>:
 800053c:	b510      	push	{r4, lr}
 800053e:	4b0b      	ldr	r3, [pc, #44]	@ (800056c <global_stdio_init.part.0+0x30>)
 8000540:	4c0b      	ldr	r4, [pc, #44]	@ (8000570 <global_stdio_init.part.0+0x34>)
 8000542:	4a0c      	ldr	r2, [pc, #48]	@ (8000574 <global_stdio_init.part.0+0x38>)
 8000544:	601a      	str	r2, [r3, #0]
 8000546:	4620      	mov	r0, r4
 8000548:	2200      	movs	r2, #0
 800054a:	2104      	movs	r1, #4
 800054c:	f7ff ff94 	bl	8000478 <std>
 8000550:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000554:	2201      	movs	r2, #1
 8000556:	2109      	movs	r1, #9
 8000558:	f7ff ff8e 	bl	8000478 <std>
 800055c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000560:	2202      	movs	r2, #2
 8000562:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000566:	2112      	movs	r1, #18
 8000568:	f7ff bf86 	b.w	8000478 <std>
 800056c:	200001b4 	.word	0x200001b4
 8000570:	2000007c 	.word	0x2000007c
 8000574:	080004e5 	.word	0x080004e5

08000578 <__sfp_lock_acquire>:
 8000578:	4801      	ldr	r0, [pc, #4]	@ (8000580 <__sfp_lock_acquire+0x8>)
 800057a:	f000 ba00 	b.w	800097e <__retarget_lock_acquire_recursive>
 800057e:	bf00      	nop
 8000580:	200001bd 	.word	0x200001bd

08000584 <__sfp_lock_release>:
 8000584:	4801      	ldr	r0, [pc, #4]	@ (800058c <__sfp_lock_release+0x8>)
 8000586:	f000 b9fb 	b.w	8000980 <__retarget_lock_release_recursive>
 800058a:	bf00      	nop
 800058c:	200001bd 	.word	0x200001bd

08000590 <__sinit>:
 8000590:	b510      	push	{r4, lr}
 8000592:	4604      	mov	r4, r0
 8000594:	f7ff fff0 	bl	8000578 <__sfp_lock_acquire>
 8000598:	6a23      	ldr	r3, [r4, #32]
 800059a:	b11b      	cbz	r3, 80005a4 <__sinit+0x14>
 800059c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005a0:	f7ff bff0 	b.w	8000584 <__sfp_lock_release>
 80005a4:	4b04      	ldr	r3, [pc, #16]	@ (80005b8 <__sinit+0x28>)
 80005a6:	6223      	str	r3, [r4, #32]
 80005a8:	4b04      	ldr	r3, [pc, #16]	@ (80005bc <__sinit+0x2c>)
 80005aa:	681b      	ldr	r3, [r3, #0]
 80005ac:	2b00      	cmp	r3, #0
 80005ae:	d1f5      	bne.n	800059c <__sinit+0xc>
 80005b0:	f7ff ffc4 	bl	800053c <global_stdio_init.part.0>
 80005b4:	e7f2      	b.n	800059c <__sinit+0xc>
 80005b6:	bf00      	nop
 80005b8:	080004fd 	.word	0x080004fd
 80005bc:	200001b4 	.word	0x200001b4

080005c0 <_fwalk_sglue>:
 80005c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80005c4:	4607      	mov	r7, r0
 80005c6:	4688      	mov	r8, r1
 80005c8:	4614      	mov	r4, r2
 80005ca:	2600      	movs	r6, #0
 80005cc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80005d0:	f1b9 0901 	subs.w	r9, r9, #1
 80005d4:	d505      	bpl.n	80005e2 <_fwalk_sglue+0x22>
 80005d6:	6824      	ldr	r4, [r4, #0]
 80005d8:	2c00      	cmp	r4, #0
 80005da:	d1f7      	bne.n	80005cc <_fwalk_sglue+0xc>
 80005dc:	4630      	mov	r0, r6
 80005de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80005e2:	89ab      	ldrh	r3, [r5, #12]
 80005e4:	2b01      	cmp	r3, #1
 80005e6:	d907      	bls.n	80005f8 <_fwalk_sglue+0x38>
 80005e8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80005ec:	3301      	adds	r3, #1
 80005ee:	d003      	beq.n	80005f8 <_fwalk_sglue+0x38>
 80005f0:	4629      	mov	r1, r5
 80005f2:	4638      	mov	r0, r7
 80005f4:	47c0      	blx	r8
 80005f6:	4306      	orrs	r6, r0
 80005f8:	3568      	adds	r5, #104	@ 0x68
 80005fa:	e7e9      	b.n	80005d0 <_fwalk_sglue+0x10>

080005fc <iprintf>:
 80005fc:	b40f      	push	{r0, r1, r2, r3}
 80005fe:	b507      	push	{r0, r1, r2, lr}
 8000600:	4906      	ldr	r1, [pc, #24]	@ (800061c <iprintf+0x20>)
 8000602:	ab04      	add	r3, sp, #16
 8000604:	6808      	ldr	r0, [r1, #0]
 8000606:	f853 2b04 	ldr.w	r2, [r3], #4
 800060a:	6881      	ldr	r1, [r0, #8]
 800060c:	9301      	str	r3, [sp, #4]
 800060e:	f000 fadb 	bl	8000bc8 <_vfiprintf_r>
 8000612:	b003      	add	sp, #12
 8000614:	f85d eb04 	ldr.w	lr, [sp], #4
 8000618:	b004      	add	sp, #16
 800061a:	4770      	bx	lr
 800061c:	2000000c 	.word	0x2000000c

08000620 <_puts_r>:
 8000620:	6a03      	ldr	r3, [r0, #32]
 8000622:	b570      	push	{r4, r5, r6, lr}
 8000624:	6884      	ldr	r4, [r0, #8]
 8000626:	4605      	mov	r5, r0
 8000628:	460e      	mov	r6, r1
 800062a:	b90b      	cbnz	r3, 8000630 <_puts_r+0x10>
 800062c:	f7ff ffb0 	bl	8000590 <__sinit>
 8000630:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000632:	07db      	lsls	r3, r3, #31
 8000634:	d405      	bmi.n	8000642 <_puts_r+0x22>
 8000636:	89a3      	ldrh	r3, [r4, #12]
 8000638:	0598      	lsls	r0, r3, #22
 800063a:	d402      	bmi.n	8000642 <_puts_r+0x22>
 800063c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800063e:	f000 f99e 	bl	800097e <__retarget_lock_acquire_recursive>
 8000642:	89a3      	ldrh	r3, [r4, #12]
 8000644:	0719      	lsls	r1, r3, #28
 8000646:	d502      	bpl.n	800064e <_puts_r+0x2e>
 8000648:	6923      	ldr	r3, [r4, #16]
 800064a:	2b00      	cmp	r3, #0
 800064c:	d135      	bne.n	80006ba <_puts_r+0x9a>
 800064e:	4621      	mov	r1, r4
 8000650:	4628      	mov	r0, r5
 8000652:	f000 f8c5 	bl	80007e0 <__swsetup_r>
 8000656:	b380      	cbz	r0, 80006ba <_puts_r+0x9a>
 8000658:	f04f 35ff 	mov.w	r5, #4294967295
 800065c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800065e:	07da      	lsls	r2, r3, #31
 8000660:	d405      	bmi.n	800066e <_puts_r+0x4e>
 8000662:	89a3      	ldrh	r3, [r4, #12]
 8000664:	059b      	lsls	r3, r3, #22
 8000666:	d402      	bmi.n	800066e <_puts_r+0x4e>
 8000668:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800066a:	f000 f989 	bl	8000980 <__retarget_lock_release_recursive>
 800066e:	4628      	mov	r0, r5
 8000670:	bd70      	pop	{r4, r5, r6, pc}
 8000672:	2b00      	cmp	r3, #0
 8000674:	da04      	bge.n	8000680 <_puts_r+0x60>
 8000676:	69a2      	ldr	r2, [r4, #24]
 8000678:	429a      	cmp	r2, r3
 800067a:	dc17      	bgt.n	80006ac <_puts_r+0x8c>
 800067c:	290a      	cmp	r1, #10
 800067e:	d015      	beq.n	80006ac <_puts_r+0x8c>
 8000680:	6823      	ldr	r3, [r4, #0]
 8000682:	1c5a      	adds	r2, r3, #1
 8000684:	6022      	str	r2, [r4, #0]
 8000686:	7019      	strb	r1, [r3, #0]
 8000688:	68a3      	ldr	r3, [r4, #8]
 800068a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800068e:	3b01      	subs	r3, #1
 8000690:	60a3      	str	r3, [r4, #8]
 8000692:	2900      	cmp	r1, #0
 8000694:	d1ed      	bne.n	8000672 <_puts_r+0x52>
 8000696:	2b00      	cmp	r3, #0
 8000698:	da11      	bge.n	80006be <_puts_r+0x9e>
 800069a:	4622      	mov	r2, r4
 800069c:	210a      	movs	r1, #10
 800069e:	4628      	mov	r0, r5
 80006a0:	f000 f85f 	bl	8000762 <__swbuf_r>
 80006a4:	3001      	adds	r0, #1
 80006a6:	d0d7      	beq.n	8000658 <_puts_r+0x38>
 80006a8:	250a      	movs	r5, #10
 80006aa:	e7d7      	b.n	800065c <_puts_r+0x3c>
 80006ac:	4622      	mov	r2, r4
 80006ae:	4628      	mov	r0, r5
 80006b0:	f000 f857 	bl	8000762 <__swbuf_r>
 80006b4:	3001      	adds	r0, #1
 80006b6:	d1e7      	bne.n	8000688 <_puts_r+0x68>
 80006b8:	e7ce      	b.n	8000658 <_puts_r+0x38>
 80006ba:	3e01      	subs	r6, #1
 80006bc:	e7e4      	b.n	8000688 <_puts_r+0x68>
 80006be:	6823      	ldr	r3, [r4, #0]
 80006c0:	1c5a      	adds	r2, r3, #1
 80006c2:	6022      	str	r2, [r4, #0]
 80006c4:	220a      	movs	r2, #10
 80006c6:	701a      	strb	r2, [r3, #0]
 80006c8:	e7ee      	b.n	80006a8 <_puts_r+0x88>
	...

080006cc <puts>:
 80006cc:	4b02      	ldr	r3, [pc, #8]	@ (80006d8 <puts+0xc>)
 80006ce:	4601      	mov	r1, r0
 80006d0:	6818      	ldr	r0, [r3, #0]
 80006d2:	f7ff bfa5 	b.w	8000620 <_puts_r>
 80006d6:	bf00      	nop
 80006d8:	2000000c 	.word	0x2000000c

080006dc <__sread>:
 80006dc:	b510      	push	{r4, lr}
 80006de:	460c      	mov	r4, r1
 80006e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006e4:	f000 f8fc 	bl	80008e0 <_read_r>
 80006e8:	2800      	cmp	r0, #0
 80006ea:	bfab      	itete	ge
 80006ec:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80006ee:	89a3      	ldrhlt	r3, [r4, #12]
 80006f0:	181b      	addge	r3, r3, r0
 80006f2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80006f6:	bfac      	ite	ge
 80006f8:	6563      	strge	r3, [r4, #84]	@ 0x54
 80006fa:	81a3      	strhlt	r3, [r4, #12]
 80006fc:	bd10      	pop	{r4, pc}

080006fe <__swrite>:
 80006fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000702:	461f      	mov	r7, r3
 8000704:	898b      	ldrh	r3, [r1, #12]
 8000706:	05db      	lsls	r3, r3, #23
 8000708:	4605      	mov	r5, r0
 800070a:	460c      	mov	r4, r1
 800070c:	4616      	mov	r6, r2
 800070e:	d505      	bpl.n	800071c <__swrite+0x1e>
 8000710:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000714:	2302      	movs	r3, #2
 8000716:	2200      	movs	r2, #0
 8000718:	f000 f8d0 	bl	80008bc <_lseek_r>
 800071c:	89a3      	ldrh	r3, [r4, #12]
 800071e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000722:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000726:	81a3      	strh	r3, [r4, #12]
 8000728:	4632      	mov	r2, r6
 800072a:	463b      	mov	r3, r7
 800072c:	4628      	mov	r0, r5
 800072e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000732:	f000 b8e7 	b.w	8000904 <_write_r>

08000736 <__sseek>:
 8000736:	b510      	push	{r4, lr}
 8000738:	460c      	mov	r4, r1
 800073a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800073e:	f000 f8bd 	bl	80008bc <_lseek_r>
 8000742:	1c43      	adds	r3, r0, #1
 8000744:	89a3      	ldrh	r3, [r4, #12]
 8000746:	bf15      	itete	ne
 8000748:	6560      	strne	r0, [r4, #84]	@ 0x54
 800074a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800074e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000752:	81a3      	strheq	r3, [r4, #12]
 8000754:	bf18      	it	ne
 8000756:	81a3      	strhne	r3, [r4, #12]
 8000758:	bd10      	pop	{r4, pc}

0800075a <__sclose>:
 800075a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800075e:	f000 b89d 	b.w	800089c <_close_r>

08000762 <__swbuf_r>:
 8000762:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000764:	460e      	mov	r6, r1
 8000766:	4614      	mov	r4, r2
 8000768:	4605      	mov	r5, r0
 800076a:	b118      	cbz	r0, 8000774 <__swbuf_r+0x12>
 800076c:	6a03      	ldr	r3, [r0, #32]
 800076e:	b90b      	cbnz	r3, 8000774 <__swbuf_r+0x12>
 8000770:	f7ff ff0e 	bl	8000590 <__sinit>
 8000774:	69a3      	ldr	r3, [r4, #24]
 8000776:	60a3      	str	r3, [r4, #8]
 8000778:	89a3      	ldrh	r3, [r4, #12]
 800077a:	071a      	lsls	r2, r3, #28
 800077c:	d501      	bpl.n	8000782 <__swbuf_r+0x20>
 800077e:	6923      	ldr	r3, [r4, #16]
 8000780:	b943      	cbnz	r3, 8000794 <__swbuf_r+0x32>
 8000782:	4621      	mov	r1, r4
 8000784:	4628      	mov	r0, r5
 8000786:	f000 f82b 	bl	80007e0 <__swsetup_r>
 800078a:	b118      	cbz	r0, 8000794 <__swbuf_r+0x32>
 800078c:	f04f 37ff 	mov.w	r7, #4294967295
 8000790:	4638      	mov	r0, r7
 8000792:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000794:	6823      	ldr	r3, [r4, #0]
 8000796:	6922      	ldr	r2, [r4, #16]
 8000798:	1a98      	subs	r0, r3, r2
 800079a:	6963      	ldr	r3, [r4, #20]
 800079c:	b2f6      	uxtb	r6, r6
 800079e:	4283      	cmp	r3, r0
 80007a0:	4637      	mov	r7, r6
 80007a2:	dc05      	bgt.n	80007b0 <__swbuf_r+0x4e>
 80007a4:	4621      	mov	r1, r4
 80007a6:	4628      	mov	r0, r5
 80007a8:	f000 fd36 	bl	8001218 <_fflush_r>
 80007ac:	2800      	cmp	r0, #0
 80007ae:	d1ed      	bne.n	800078c <__swbuf_r+0x2a>
 80007b0:	68a3      	ldr	r3, [r4, #8]
 80007b2:	3b01      	subs	r3, #1
 80007b4:	60a3      	str	r3, [r4, #8]
 80007b6:	6823      	ldr	r3, [r4, #0]
 80007b8:	1c5a      	adds	r2, r3, #1
 80007ba:	6022      	str	r2, [r4, #0]
 80007bc:	701e      	strb	r6, [r3, #0]
 80007be:	6962      	ldr	r2, [r4, #20]
 80007c0:	1c43      	adds	r3, r0, #1
 80007c2:	429a      	cmp	r2, r3
 80007c4:	d004      	beq.n	80007d0 <__swbuf_r+0x6e>
 80007c6:	89a3      	ldrh	r3, [r4, #12]
 80007c8:	07db      	lsls	r3, r3, #31
 80007ca:	d5e1      	bpl.n	8000790 <__swbuf_r+0x2e>
 80007cc:	2e0a      	cmp	r6, #10
 80007ce:	d1df      	bne.n	8000790 <__swbuf_r+0x2e>
 80007d0:	4621      	mov	r1, r4
 80007d2:	4628      	mov	r0, r5
 80007d4:	f000 fd20 	bl	8001218 <_fflush_r>
 80007d8:	2800      	cmp	r0, #0
 80007da:	d0d9      	beq.n	8000790 <__swbuf_r+0x2e>
 80007dc:	e7d6      	b.n	800078c <__swbuf_r+0x2a>
	...

080007e0 <__swsetup_r>:
 80007e0:	b538      	push	{r3, r4, r5, lr}
 80007e2:	4b29      	ldr	r3, [pc, #164]	@ (8000888 <__swsetup_r+0xa8>)
 80007e4:	4605      	mov	r5, r0
 80007e6:	6818      	ldr	r0, [r3, #0]
 80007e8:	460c      	mov	r4, r1
 80007ea:	b118      	cbz	r0, 80007f4 <__swsetup_r+0x14>
 80007ec:	6a03      	ldr	r3, [r0, #32]
 80007ee:	b90b      	cbnz	r3, 80007f4 <__swsetup_r+0x14>
 80007f0:	f7ff fece 	bl	8000590 <__sinit>
 80007f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007f8:	0719      	lsls	r1, r3, #28
 80007fa:	d422      	bmi.n	8000842 <__swsetup_r+0x62>
 80007fc:	06da      	lsls	r2, r3, #27
 80007fe:	d407      	bmi.n	8000810 <__swsetup_r+0x30>
 8000800:	2209      	movs	r2, #9
 8000802:	602a      	str	r2, [r5, #0]
 8000804:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000808:	81a3      	strh	r3, [r4, #12]
 800080a:	f04f 30ff 	mov.w	r0, #4294967295
 800080e:	e033      	b.n	8000878 <__swsetup_r+0x98>
 8000810:	0758      	lsls	r0, r3, #29
 8000812:	d512      	bpl.n	800083a <__swsetup_r+0x5a>
 8000814:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000816:	b141      	cbz	r1, 800082a <__swsetup_r+0x4a>
 8000818:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800081c:	4299      	cmp	r1, r3
 800081e:	d002      	beq.n	8000826 <__swsetup_r+0x46>
 8000820:	4628      	mov	r0, r5
 8000822:	f000 f8af 	bl	8000984 <_free_r>
 8000826:	2300      	movs	r3, #0
 8000828:	6363      	str	r3, [r4, #52]	@ 0x34
 800082a:	89a3      	ldrh	r3, [r4, #12]
 800082c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000830:	81a3      	strh	r3, [r4, #12]
 8000832:	2300      	movs	r3, #0
 8000834:	6063      	str	r3, [r4, #4]
 8000836:	6923      	ldr	r3, [r4, #16]
 8000838:	6023      	str	r3, [r4, #0]
 800083a:	89a3      	ldrh	r3, [r4, #12]
 800083c:	f043 0308 	orr.w	r3, r3, #8
 8000840:	81a3      	strh	r3, [r4, #12]
 8000842:	6923      	ldr	r3, [r4, #16]
 8000844:	b94b      	cbnz	r3, 800085a <__swsetup_r+0x7a>
 8000846:	89a3      	ldrh	r3, [r4, #12]
 8000848:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800084c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000850:	d003      	beq.n	800085a <__swsetup_r+0x7a>
 8000852:	4621      	mov	r1, r4
 8000854:	4628      	mov	r0, r5
 8000856:	f000 fd2d 	bl	80012b4 <__smakebuf_r>
 800085a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800085e:	f013 0201 	ands.w	r2, r3, #1
 8000862:	d00a      	beq.n	800087a <__swsetup_r+0x9a>
 8000864:	2200      	movs	r2, #0
 8000866:	60a2      	str	r2, [r4, #8]
 8000868:	6962      	ldr	r2, [r4, #20]
 800086a:	4252      	negs	r2, r2
 800086c:	61a2      	str	r2, [r4, #24]
 800086e:	6922      	ldr	r2, [r4, #16]
 8000870:	b942      	cbnz	r2, 8000884 <__swsetup_r+0xa4>
 8000872:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8000876:	d1c5      	bne.n	8000804 <__swsetup_r+0x24>
 8000878:	bd38      	pop	{r3, r4, r5, pc}
 800087a:	0799      	lsls	r1, r3, #30
 800087c:	bf58      	it	pl
 800087e:	6962      	ldrpl	r2, [r4, #20]
 8000880:	60a2      	str	r2, [r4, #8]
 8000882:	e7f4      	b.n	800086e <__swsetup_r+0x8e>
 8000884:	2000      	movs	r0, #0
 8000886:	e7f7      	b.n	8000878 <__swsetup_r+0x98>
 8000888:	2000000c 	.word	0x2000000c

0800088c <memset>:
 800088c:	4402      	add	r2, r0
 800088e:	4603      	mov	r3, r0
 8000890:	4293      	cmp	r3, r2
 8000892:	d100      	bne.n	8000896 <memset+0xa>
 8000894:	4770      	bx	lr
 8000896:	f803 1b01 	strb.w	r1, [r3], #1
 800089a:	e7f9      	b.n	8000890 <memset+0x4>

0800089c <_close_r>:
 800089c:	b538      	push	{r3, r4, r5, lr}
 800089e:	4d06      	ldr	r5, [pc, #24]	@ (80008b8 <_close_r+0x1c>)
 80008a0:	2300      	movs	r3, #0
 80008a2:	4604      	mov	r4, r0
 80008a4:	4608      	mov	r0, r1
 80008a6:	602b      	str	r3, [r5, #0]
 80008a8:	f7ff fd51 	bl	800034e <_close>
 80008ac:	1c43      	adds	r3, r0, #1
 80008ae:	d102      	bne.n	80008b6 <_close_r+0x1a>
 80008b0:	682b      	ldr	r3, [r5, #0]
 80008b2:	b103      	cbz	r3, 80008b6 <_close_r+0x1a>
 80008b4:	6023      	str	r3, [r4, #0]
 80008b6:	bd38      	pop	{r3, r4, r5, pc}
 80008b8:	200001b8 	.word	0x200001b8

080008bc <_lseek_r>:
 80008bc:	b538      	push	{r3, r4, r5, lr}
 80008be:	4d07      	ldr	r5, [pc, #28]	@ (80008dc <_lseek_r+0x20>)
 80008c0:	4604      	mov	r4, r0
 80008c2:	4608      	mov	r0, r1
 80008c4:	4611      	mov	r1, r2
 80008c6:	2200      	movs	r2, #0
 80008c8:	602a      	str	r2, [r5, #0]
 80008ca:	461a      	mov	r2, r3
 80008cc:	f7ff fd66 	bl	800039c <_lseek>
 80008d0:	1c43      	adds	r3, r0, #1
 80008d2:	d102      	bne.n	80008da <_lseek_r+0x1e>
 80008d4:	682b      	ldr	r3, [r5, #0]
 80008d6:	b103      	cbz	r3, 80008da <_lseek_r+0x1e>
 80008d8:	6023      	str	r3, [r4, #0]
 80008da:	bd38      	pop	{r3, r4, r5, pc}
 80008dc:	200001b8 	.word	0x200001b8

080008e0 <_read_r>:
 80008e0:	b538      	push	{r3, r4, r5, lr}
 80008e2:	4d07      	ldr	r5, [pc, #28]	@ (8000900 <_read_r+0x20>)
 80008e4:	4604      	mov	r4, r0
 80008e6:	4608      	mov	r0, r1
 80008e8:	4611      	mov	r1, r2
 80008ea:	2200      	movs	r2, #0
 80008ec:	602a      	str	r2, [r5, #0]
 80008ee:	461a      	mov	r2, r3
 80008f0:	f7ff fcf4 	bl	80002dc <_read>
 80008f4:	1c43      	adds	r3, r0, #1
 80008f6:	d102      	bne.n	80008fe <_read_r+0x1e>
 80008f8:	682b      	ldr	r3, [r5, #0]
 80008fa:	b103      	cbz	r3, 80008fe <_read_r+0x1e>
 80008fc:	6023      	str	r3, [r4, #0]
 80008fe:	bd38      	pop	{r3, r4, r5, pc}
 8000900:	200001b8 	.word	0x200001b8

08000904 <_write_r>:
 8000904:	b538      	push	{r3, r4, r5, lr}
 8000906:	4d07      	ldr	r5, [pc, #28]	@ (8000924 <_write_r+0x20>)
 8000908:	4604      	mov	r4, r0
 800090a:	4608      	mov	r0, r1
 800090c:	4611      	mov	r1, r2
 800090e:	2200      	movs	r2, #0
 8000910:	602a      	str	r2, [r5, #0]
 8000912:	461a      	mov	r2, r3
 8000914:	f7ff fcff 	bl	8000316 <_write>
 8000918:	1c43      	adds	r3, r0, #1
 800091a:	d102      	bne.n	8000922 <_write_r+0x1e>
 800091c:	682b      	ldr	r3, [r5, #0]
 800091e:	b103      	cbz	r3, 8000922 <_write_r+0x1e>
 8000920:	6023      	str	r3, [r4, #0]
 8000922:	bd38      	pop	{r3, r4, r5, pc}
 8000924:	200001b8 	.word	0x200001b8

08000928 <__errno>:
 8000928:	4b01      	ldr	r3, [pc, #4]	@ (8000930 <__errno+0x8>)
 800092a:	6818      	ldr	r0, [r3, #0]
 800092c:	4770      	bx	lr
 800092e:	bf00      	nop
 8000930:	2000000c 	.word	0x2000000c

08000934 <__libc_init_array>:
 8000934:	b570      	push	{r4, r5, r6, lr}
 8000936:	4d0d      	ldr	r5, [pc, #52]	@ (800096c <__libc_init_array+0x38>)
 8000938:	4c0d      	ldr	r4, [pc, #52]	@ (8000970 <__libc_init_array+0x3c>)
 800093a:	1b64      	subs	r4, r4, r5
 800093c:	10a4      	asrs	r4, r4, #2
 800093e:	2600      	movs	r6, #0
 8000940:	42a6      	cmp	r6, r4
 8000942:	d109      	bne.n	8000958 <__libc_init_array+0x24>
 8000944:	4d0b      	ldr	r5, [pc, #44]	@ (8000974 <__libc_init_array+0x40>)
 8000946:	4c0c      	ldr	r4, [pc, #48]	@ (8000978 <__libc_init_array+0x44>)
 8000948:	f000 fd22 	bl	8001390 <_init>
 800094c:	1b64      	subs	r4, r4, r5
 800094e:	10a4      	asrs	r4, r4, #2
 8000950:	2600      	movs	r6, #0
 8000952:	42a6      	cmp	r6, r4
 8000954:	d105      	bne.n	8000962 <__libc_init_array+0x2e>
 8000956:	bd70      	pop	{r4, r5, r6, pc}
 8000958:	f855 3b04 	ldr.w	r3, [r5], #4
 800095c:	4798      	blx	r3
 800095e:	3601      	adds	r6, #1
 8000960:	e7ee      	b.n	8000940 <__libc_init_array+0xc>
 8000962:	f855 3b04 	ldr.w	r3, [r5], #4
 8000966:	4798      	blx	r3
 8000968:	3601      	adds	r6, #1
 800096a:	e7f2      	b.n	8000952 <__libc_init_array+0x1e>
 800096c:	08001400 	.word	0x08001400
 8000970:	08001400 	.word	0x08001400
 8000974:	08001400 	.word	0x08001400
 8000978:	08001404 	.word	0x08001404

0800097c <__retarget_lock_init_recursive>:
 800097c:	4770      	bx	lr

0800097e <__retarget_lock_acquire_recursive>:
 800097e:	4770      	bx	lr

08000980 <__retarget_lock_release_recursive>:
 8000980:	4770      	bx	lr
	...

08000984 <_free_r>:
 8000984:	b538      	push	{r3, r4, r5, lr}
 8000986:	4605      	mov	r5, r0
 8000988:	2900      	cmp	r1, #0
 800098a:	d041      	beq.n	8000a10 <_free_r+0x8c>
 800098c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000990:	1f0c      	subs	r4, r1, #4
 8000992:	2b00      	cmp	r3, #0
 8000994:	bfb8      	it	lt
 8000996:	18e4      	addlt	r4, r4, r3
 8000998:	f000 f8e0 	bl	8000b5c <__malloc_lock>
 800099c:	4a1d      	ldr	r2, [pc, #116]	@ (8000a14 <_free_r+0x90>)
 800099e:	6813      	ldr	r3, [r2, #0]
 80009a0:	b933      	cbnz	r3, 80009b0 <_free_r+0x2c>
 80009a2:	6063      	str	r3, [r4, #4]
 80009a4:	6014      	str	r4, [r2, #0]
 80009a6:	4628      	mov	r0, r5
 80009a8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80009ac:	f000 b8dc 	b.w	8000b68 <__malloc_unlock>
 80009b0:	42a3      	cmp	r3, r4
 80009b2:	d908      	bls.n	80009c6 <_free_r+0x42>
 80009b4:	6820      	ldr	r0, [r4, #0]
 80009b6:	1821      	adds	r1, r4, r0
 80009b8:	428b      	cmp	r3, r1
 80009ba:	bf01      	itttt	eq
 80009bc:	6819      	ldreq	r1, [r3, #0]
 80009be:	685b      	ldreq	r3, [r3, #4]
 80009c0:	1809      	addeq	r1, r1, r0
 80009c2:	6021      	streq	r1, [r4, #0]
 80009c4:	e7ed      	b.n	80009a2 <_free_r+0x1e>
 80009c6:	461a      	mov	r2, r3
 80009c8:	685b      	ldr	r3, [r3, #4]
 80009ca:	b10b      	cbz	r3, 80009d0 <_free_r+0x4c>
 80009cc:	42a3      	cmp	r3, r4
 80009ce:	d9fa      	bls.n	80009c6 <_free_r+0x42>
 80009d0:	6811      	ldr	r1, [r2, #0]
 80009d2:	1850      	adds	r0, r2, r1
 80009d4:	42a0      	cmp	r0, r4
 80009d6:	d10b      	bne.n	80009f0 <_free_r+0x6c>
 80009d8:	6820      	ldr	r0, [r4, #0]
 80009da:	4401      	add	r1, r0
 80009dc:	1850      	adds	r0, r2, r1
 80009de:	4283      	cmp	r3, r0
 80009e0:	6011      	str	r1, [r2, #0]
 80009e2:	d1e0      	bne.n	80009a6 <_free_r+0x22>
 80009e4:	6818      	ldr	r0, [r3, #0]
 80009e6:	685b      	ldr	r3, [r3, #4]
 80009e8:	6053      	str	r3, [r2, #4]
 80009ea:	4408      	add	r0, r1
 80009ec:	6010      	str	r0, [r2, #0]
 80009ee:	e7da      	b.n	80009a6 <_free_r+0x22>
 80009f0:	d902      	bls.n	80009f8 <_free_r+0x74>
 80009f2:	230c      	movs	r3, #12
 80009f4:	602b      	str	r3, [r5, #0]
 80009f6:	e7d6      	b.n	80009a6 <_free_r+0x22>
 80009f8:	6820      	ldr	r0, [r4, #0]
 80009fa:	1821      	adds	r1, r4, r0
 80009fc:	428b      	cmp	r3, r1
 80009fe:	bf04      	itt	eq
 8000a00:	6819      	ldreq	r1, [r3, #0]
 8000a02:	685b      	ldreq	r3, [r3, #4]
 8000a04:	6063      	str	r3, [r4, #4]
 8000a06:	bf04      	itt	eq
 8000a08:	1809      	addeq	r1, r1, r0
 8000a0a:	6021      	streq	r1, [r4, #0]
 8000a0c:	6054      	str	r4, [r2, #4]
 8000a0e:	e7ca      	b.n	80009a6 <_free_r+0x22>
 8000a10:	bd38      	pop	{r3, r4, r5, pc}
 8000a12:	bf00      	nop
 8000a14:	200001c4 	.word	0x200001c4

08000a18 <sbrk_aligned>:
 8000a18:	b570      	push	{r4, r5, r6, lr}
 8000a1a:	4e0f      	ldr	r6, [pc, #60]	@ (8000a58 <sbrk_aligned+0x40>)
 8000a1c:	460c      	mov	r4, r1
 8000a1e:	6831      	ldr	r1, [r6, #0]
 8000a20:	4605      	mov	r5, r0
 8000a22:	b911      	cbnz	r1, 8000a2a <sbrk_aligned+0x12>
 8000a24:	f000 fca4 	bl	8001370 <_sbrk_r>
 8000a28:	6030      	str	r0, [r6, #0]
 8000a2a:	4621      	mov	r1, r4
 8000a2c:	4628      	mov	r0, r5
 8000a2e:	f000 fc9f 	bl	8001370 <_sbrk_r>
 8000a32:	1c43      	adds	r3, r0, #1
 8000a34:	d103      	bne.n	8000a3e <sbrk_aligned+0x26>
 8000a36:	f04f 34ff 	mov.w	r4, #4294967295
 8000a3a:	4620      	mov	r0, r4
 8000a3c:	bd70      	pop	{r4, r5, r6, pc}
 8000a3e:	1cc4      	adds	r4, r0, #3
 8000a40:	f024 0403 	bic.w	r4, r4, #3
 8000a44:	42a0      	cmp	r0, r4
 8000a46:	d0f8      	beq.n	8000a3a <sbrk_aligned+0x22>
 8000a48:	1a21      	subs	r1, r4, r0
 8000a4a:	4628      	mov	r0, r5
 8000a4c:	f000 fc90 	bl	8001370 <_sbrk_r>
 8000a50:	3001      	adds	r0, #1
 8000a52:	d1f2      	bne.n	8000a3a <sbrk_aligned+0x22>
 8000a54:	e7ef      	b.n	8000a36 <sbrk_aligned+0x1e>
 8000a56:	bf00      	nop
 8000a58:	200001c0 	.word	0x200001c0

08000a5c <_malloc_r>:
 8000a5c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a60:	1ccd      	adds	r5, r1, #3
 8000a62:	f025 0503 	bic.w	r5, r5, #3
 8000a66:	3508      	adds	r5, #8
 8000a68:	2d0c      	cmp	r5, #12
 8000a6a:	bf38      	it	cc
 8000a6c:	250c      	movcc	r5, #12
 8000a6e:	2d00      	cmp	r5, #0
 8000a70:	4606      	mov	r6, r0
 8000a72:	db01      	blt.n	8000a78 <_malloc_r+0x1c>
 8000a74:	42a9      	cmp	r1, r5
 8000a76:	d904      	bls.n	8000a82 <_malloc_r+0x26>
 8000a78:	230c      	movs	r3, #12
 8000a7a:	6033      	str	r3, [r6, #0]
 8000a7c:	2000      	movs	r0, #0
 8000a7e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a82:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000b58 <_malloc_r+0xfc>
 8000a86:	f000 f869 	bl	8000b5c <__malloc_lock>
 8000a8a:	f8d8 3000 	ldr.w	r3, [r8]
 8000a8e:	461c      	mov	r4, r3
 8000a90:	bb44      	cbnz	r4, 8000ae4 <_malloc_r+0x88>
 8000a92:	4629      	mov	r1, r5
 8000a94:	4630      	mov	r0, r6
 8000a96:	f7ff ffbf 	bl	8000a18 <sbrk_aligned>
 8000a9a:	1c43      	adds	r3, r0, #1
 8000a9c:	4604      	mov	r4, r0
 8000a9e:	d158      	bne.n	8000b52 <_malloc_r+0xf6>
 8000aa0:	f8d8 4000 	ldr.w	r4, [r8]
 8000aa4:	4627      	mov	r7, r4
 8000aa6:	2f00      	cmp	r7, #0
 8000aa8:	d143      	bne.n	8000b32 <_malloc_r+0xd6>
 8000aaa:	2c00      	cmp	r4, #0
 8000aac:	d04b      	beq.n	8000b46 <_malloc_r+0xea>
 8000aae:	6823      	ldr	r3, [r4, #0]
 8000ab0:	4639      	mov	r1, r7
 8000ab2:	4630      	mov	r0, r6
 8000ab4:	eb04 0903 	add.w	r9, r4, r3
 8000ab8:	f000 fc5a 	bl	8001370 <_sbrk_r>
 8000abc:	4581      	cmp	r9, r0
 8000abe:	d142      	bne.n	8000b46 <_malloc_r+0xea>
 8000ac0:	6821      	ldr	r1, [r4, #0]
 8000ac2:	1a6d      	subs	r5, r5, r1
 8000ac4:	4629      	mov	r1, r5
 8000ac6:	4630      	mov	r0, r6
 8000ac8:	f7ff ffa6 	bl	8000a18 <sbrk_aligned>
 8000acc:	3001      	adds	r0, #1
 8000ace:	d03a      	beq.n	8000b46 <_malloc_r+0xea>
 8000ad0:	6823      	ldr	r3, [r4, #0]
 8000ad2:	442b      	add	r3, r5
 8000ad4:	6023      	str	r3, [r4, #0]
 8000ad6:	f8d8 3000 	ldr.w	r3, [r8]
 8000ada:	685a      	ldr	r2, [r3, #4]
 8000adc:	bb62      	cbnz	r2, 8000b38 <_malloc_r+0xdc>
 8000ade:	f8c8 7000 	str.w	r7, [r8]
 8000ae2:	e00f      	b.n	8000b04 <_malloc_r+0xa8>
 8000ae4:	6822      	ldr	r2, [r4, #0]
 8000ae6:	1b52      	subs	r2, r2, r5
 8000ae8:	d420      	bmi.n	8000b2c <_malloc_r+0xd0>
 8000aea:	2a0b      	cmp	r2, #11
 8000aec:	d917      	bls.n	8000b1e <_malloc_r+0xc2>
 8000aee:	1961      	adds	r1, r4, r5
 8000af0:	42a3      	cmp	r3, r4
 8000af2:	6025      	str	r5, [r4, #0]
 8000af4:	bf18      	it	ne
 8000af6:	6059      	strne	r1, [r3, #4]
 8000af8:	6863      	ldr	r3, [r4, #4]
 8000afa:	bf08      	it	eq
 8000afc:	f8c8 1000 	streq.w	r1, [r8]
 8000b00:	5162      	str	r2, [r4, r5]
 8000b02:	604b      	str	r3, [r1, #4]
 8000b04:	4630      	mov	r0, r6
 8000b06:	f000 f82f 	bl	8000b68 <__malloc_unlock>
 8000b0a:	f104 000b 	add.w	r0, r4, #11
 8000b0e:	1d23      	adds	r3, r4, #4
 8000b10:	f020 0007 	bic.w	r0, r0, #7
 8000b14:	1ac2      	subs	r2, r0, r3
 8000b16:	bf1c      	itt	ne
 8000b18:	1a1b      	subne	r3, r3, r0
 8000b1a:	50a3      	strne	r3, [r4, r2]
 8000b1c:	e7af      	b.n	8000a7e <_malloc_r+0x22>
 8000b1e:	6862      	ldr	r2, [r4, #4]
 8000b20:	42a3      	cmp	r3, r4
 8000b22:	bf0c      	ite	eq
 8000b24:	f8c8 2000 	streq.w	r2, [r8]
 8000b28:	605a      	strne	r2, [r3, #4]
 8000b2a:	e7eb      	b.n	8000b04 <_malloc_r+0xa8>
 8000b2c:	4623      	mov	r3, r4
 8000b2e:	6864      	ldr	r4, [r4, #4]
 8000b30:	e7ae      	b.n	8000a90 <_malloc_r+0x34>
 8000b32:	463c      	mov	r4, r7
 8000b34:	687f      	ldr	r7, [r7, #4]
 8000b36:	e7b6      	b.n	8000aa6 <_malloc_r+0x4a>
 8000b38:	461a      	mov	r2, r3
 8000b3a:	685b      	ldr	r3, [r3, #4]
 8000b3c:	42a3      	cmp	r3, r4
 8000b3e:	d1fb      	bne.n	8000b38 <_malloc_r+0xdc>
 8000b40:	2300      	movs	r3, #0
 8000b42:	6053      	str	r3, [r2, #4]
 8000b44:	e7de      	b.n	8000b04 <_malloc_r+0xa8>
 8000b46:	230c      	movs	r3, #12
 8000b48:	6033      	str	r3, [r6, #0]
 8000b4a:	4630      	mov	r0, r6
 8000b4c:	f000 f80c 	bl	8000b68 <__malloc_unlock>
 8000b50:	e794      	b.n	8000a7c <_malloc_r+0x20>
 8000b52:	6005      	str	r5, [r0, #0]
 8000b54:	e7d6      	b.n	8000b04 <_malloc_r+0xa8>
 8000b56:	bf00      	nop
 8000b58:	200001c4 	.word	0x200001c4

08000b5c <__malloc_lock>:
 8000b5c:	4801      	ldr	r0, [pc, #4]	@ (8000b64 <__malloc_lock+0x8>)
 8000b5e:	f7ff bf0e 	b.w	800097e <__retarget_lock_acquire_recursive>
 8000b62:	bf00      	nop
 8000b64:	200001bc 	.word	0x200001bc

08000b68 <__malloc_unlock>:
 8000b68:	4801      	ldr	r0, [pc, #4]	@ (8000b70 <__malloc_unlock+0x8>)
 8000b6a:	f7ff bf09 	b.w	8000980 <__retarget_lock_release_recursive>
 8000b6e:	bf00      	nop
 8000b70:	200001bc 	.word	0x200001bc

08000b74 <__sfputc_r>:
 8000b74:	6893      	ldr	r3, [r2, #8]
 8000b76:	3b01      	subs	r3, #1
 8000b78:	2b00      	cmp	r3, #0
 8000b7a:	b410      	push	{r4}
 8000b7c:	6093      	str	r3, [r2, #8]
 8000b7e:	da08      	bge.n	8000b92 <__sfputc_r+0x1e>
 8000b80:	6994      	ldr	r4, [r2, #24]
 8000b82:	42a3      	cmp	r3, r4
 8000b84:	db01      	blt.n	8000b8a <__sfputc_r+0x16>
 8000b86:	290a      	cmp	r1, #10
 8000b88:	d103      	bne.n	8000b92 <__sfputc_r+0x1e>
 8000b8a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000b8e:	f7ff bde8 	b.w	8000762 <__swbuf_r>
 8000b92:	6813      	ldr	r3, [r2, #0]
 8000b94:	1c58      	adds	r0, r3, #1
 8000b96:	6010      	str	r0, [r2, #0]
 8000b98:	7019      	strb	r1, [r3, #0]
 8000b9a:	4608      	mov	r0, r1
 8000b9c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ba0:	4770      	bx	lr

08000ba2 <__sfputs_r>:
 8000ba2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ba4:	4606      	mov	r6, r0
 8000ba6:	460f      	mov	r7, r1
 8000ba8:	4614      	mov	r4, r2
 8000baa:	18d5      	adds	r5, r2, r3
 8000bac:	42ac      	cmp	r4, r5
 8000bae:	d101      	bne.n	8000bb4 <__sfputs_r+0x12>
 8000bb0:	2000      	movs	r0, #0
 8000bb2:	e007      	b.n	8000bc4 <__sfputs_r+0x22>
 8000bb4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bb8:	463a      	mov	r2, r7
 8000bba:	4630      	mov	r0, r6
 8000bbc:	f7ff ffda 	bl	8000b74 <__sfputc_r>
 8000bc0:	1c43      	adds	r3, r0, #1
 8000bc2:	d1f3      	bne.n	8000bac <__sfputs_r+0xa>
 8000bc4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000bc8 <_vfiprintf_r>:
 8000bc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000bcc:	460d      	mov	r5, r1
 8000bce:	b09d      	sub	sp, #116	@ 0x74
 8000bd0:	4614      	mov	r4, r2
 8000bd2:	4698      	mov	r8, r3
 8000bd4:	4606      	mov	r6, r0
 8000bd6:	b118      	cbz	r0, 8000be0 <_vfiprintf_r+0x18>
 8000bd8:	6a03      	ldr	r3, [r0, #32]
 8000bda:	b90b      	cbnz	r3, 8000be0 <_vfiprintf_r+0x18>
 8000bdc:	f7ff fcd8 	bl	8000590 <__sinit>
 8000be0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000be2:	07d9      	lsls	r1, r3, #31
 8000be4:	d405      	bmi.n	8000bf2 <_vfiprintf_r+0x2a>
 8000be6:	89ab      	ldrh	r3, [r5, #12]
 8000be8:	059a      	lsls	r2, r3, #22
 8000bea:	d402      	bmi.n	8000bf2 <_vfiprintf_r+0x2a>
 8000bec:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000bee:	f7ff fec6 	bl	800097e <__retarget_lock_acquire_recursive>
 8000bf2:	89ab      	ldrh	r3, [r5, #12]
 8000bf4:	071b      	lsls	r3, r3, #28
 8000bf6:	d501      	bpl.n	8000bfc <_vfiprintf_r+0x34>
 8000bf8:	692b      	ldr	r3, [r5, #16]
 8000bfa:	b99b      	cbnz	r3, 8000c24 <_vfiprintf_r+0x5c>
 8000bfc:	4629      	mov	r1, r5
 8000bfe:	4630      	mov	r0, r6
 8000c00:	f7ff fdee 	bl	80007e0 <__swsetup_r>
 8000c04:	b170      	cbz	r0, 8000c24 <_vfiprintf_r+0x5c>
 8000c06:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000c08:	07dc      	lsls	r4, r3, #31
 8000c0a:	d504      	bpl.n	8000c16 <_vfiprintf_r+0x4e>
 8000c0c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c10:	b01d      	add	sp, #116	@ 0x74
 8000c12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000c16:	89ab      	ldrh	r3, [r5, #12]
 8000c18:	0598      	lsls	r0, r3, #22
 8000c1a:	d4f7      	bmi.n	8000c0c <_vfiprintf_r+0x44>
 8000c1c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000c1e:	f7ff feaf 	bl	8000980 <__retarget_lock_release_recursive>
 8000c22:	e7f3      	b.n	8000c0c <_vfiprintf_r+0x44>
 8000c24:	2300      	movs	r3, #0
 8000c26:	9309      	str	r3, [sp, #36]	@ 0x24
 8000c28:	2320      	movs	r3, #32
 8000c2a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000c2e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000c32:	2330      	movs	r3, #48	@ 0x30
 8000c34:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000de4 <_vfiprintf_r+0x21c>
 8000c38:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000c3c:	f04f 0901 	mov.w	r9, #1
 8000c40:	4623      	mov	r3, r4
 8000c42:	469a      	mov	sl, r3
 8000c44:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000c48:	b10a      	cbz	r2, 8000c4e <_vfiprintf_r+0x86>
 8000c4a:	2a25      	cmp	r2, #37	@ 0x25
 8000c4c:	d1f9      	bne.n	8000c42 <_vfiprintf_r+0x7a>
 8000c4e:	ebba 0b04 	subs.w	fp, sl, r4
 8000c52:	d00b      	beq.n	8000c6c <_vfiprintf_r+0xa4>
 8000c54:	465b      	mov	r3, fp
 8000c56:	4622      	mov	r2, r4
 8000c58:	4629      	mov	r1, r5
 8000c5a:	4630      	mov	r0, r6
 8000c5c:	f7ff ffa1 	bl	8000ba2 <__sfputs_r>
 8000c60:	3001      	adds	r0, #1
 8000c62:	f000 80a7 	beq.w	8000db4 <_vfiprintf_r+0x1ec>
 8000c66:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000c68:	445a      	add	r2, fp
 8000c6a:	9209      	str	r2, [sp, #36]	@ 0x24
 8000c6c:	f89a 3000 	ldrb.w	r3, [sl]
 8000c70:	2b00      	cmp	r3, #0
 8000c72:	f000 809f 	beq.w	8000db4 <_vfiprintf_r+0x1ec>
 8000c76:	2300      	movs	r3, #0
 8000c78:	f04f 32ff 	mov.w	r2, #4294967295
 8000c7c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000c80:	f10a 0a01 	add.w	sl, sl, #1
 8000c84:	9304      	str	r3, [sp, #16]
 8000c86:	9307      	str	r3, [sp, #28]
 8000c88:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000c8c:	931a      	str	r3, [sp, #104]	@ 0x68
 8000c8e:	4654      	mov	r4, sl
 8000c90:	2205      	movs	r2, #5
 8000c92:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c96:	4853      	ldr	r0, [pc, #332]	@ (8000de4 <_vfiprintf_r+0x21c>)
 8000c98:	f7ff fa9a 	bl	80001d0 <memchr>
 8000c9c:	9a04      	ldr	r2, [sp, #16]
 8000c9e:	b9d8      	cbnz	r0, 8000cd8 <_vfiprintf_r+0x110>
 8000ca0:	06d1      	lsls	r1, r2, #27
 8000ca2:	bf44      	itt	mi
 8000ca4:	2320      	movmi	r3, #32
 8000ca6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000caa:	0713      	lsls	r3, r2, #28
 8000cac:	bf44      	itt	mi
 8000cae:	232b      	movmi	r3, #43	@ 0x2b
 8000cb0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000cb4:	f89a 3000 	ldrb.w	r3, [sl]
 8000cb8:	2b2a      	cmp	r3, #42	@ 0x2a
 8000cba:	d015      	beq.n	8000ce8 <_vfiprintf_r+0x120>
 8000cbc:	9a07      	ldr	r2, [sp, #28]
 8000cbe:	4654      	mov	r4, sl
 8000cc0:	2000      	movs	r0, #0
 8000cc2:	f04f 0c0a 	mov.w	ip, #10
 8000cc6:	4621      	mov	r1, r4
 8000cc8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000ccc:	3b30      	subs	r3, #48	@ 0x30
 8000cce:	2b09      	cmp	r3, #9
 8000cd0:	d94b      	bls.n	8000d6a <_vfiprintf_r+0x1a2>
 8000cd2:	b1b0      	cbz	r0, 8000d02 <_vfiprintf_r+0x13a>
 8000cd4:	9207      	str	r2, [sp, #28]
 8000cd6:	e014      	b.n	8000d02 <_vfiprintf_r+0x13a>
 8000cd8:	eba0 0308 	sub.w	r3, r0, r8
 8000cdc:	fa09 f303 	lsl.w	r3, r9, r3
 8000ce0:	4313      	orrs	r3, r2
 8000ce2:	9304      	str	r3, [sp, #16]
 8000ce4:	46a2      	mov	sl, r4
 8000ce6:	e7d2      	b.n	8000c8e <_vfiprintf_r+0xc6>
 8000ce8:	9b03      	ldr	r3, [sp, #12]
 8000cea:	1d19      	adds	r1, r3, #4
 8000cec:	681b      	ldr	r3, [r3, #0]
 8000cee:	9103      	str	r1, [sp, #12]
 8000cf0:	2b00      	cmp	r3, #0
 8000cf2:	bfbb      	ittet	lt
 8000cf4:	425b      	neglt	r3, r3
 8000cf6:	f042 0202 	orrlt.w	r2, r2, #2
 8000cfa:	9307      	strge	r3, [sp, #28]
 8000cfc:	9307      	strlt	r3, [sp, #28]
 8000cfe:	bfb8      	it	lt
 8000d00:	9204      	strlt	r2, [sp, #16]
 8000d02:	7823      	ldrb	r3, [r4, #0]
 8000d04:	2b2e      	cmp	r3, #46	@ 0x2e
 8000d06:	d10a      	bne.n	8000d1e <_vfiprintf_r+0x156>
 8000d08:	7863      	ldrb	r3, [r4, #1]
 8000d0a:	2b2a      	cmp	r3, #42	@ 0x2a
 8000d0c:	d132      	bne.n	8000d74 <_vfiprintf_r+0x1ac>
 8000d0e:	9b03      	ldr	r3, [sp, #12]
 8000d10:	1d1a      	adds	r2, r3, #4
 8000d12:	681b      	ldr	r3, [r3, #0]
 8000d14:	9203      	str	r2, [sp, #12]
 8000d16:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000d1a:	3402      	adds	r4, #2
 8000d1c:	9305      	str	r3, [sp, #20]
 8000d1e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8000df4 <_vfiprintf_r+0x22c>
 8000d22:	7821      	ldrb	r1, [r4, #0]
 8000d24:	2203      	movs	r2, #3
 8000d26:	4650      	mov	r0, sl
 8000d28:	f7ff fa52 	bl	80001d0 <memchr>
 8000d2c:	b138      	cbz	r0, 8000d3e <_vfiprintf_r+0x176>
 8000d2e:	9b04      	ldr	r3, [sp, #16]
 8000d30:	eba0 000a 	sub.w	r0, r0, sl
 8000d34:	2240      	movs	r2, #64	@ 0x40
 8000d36:	4082      	lsls	r2, r0
 8000d38:	4313      	orrs	r3, r2
 8000d3a:	3401      	adds	r4, #1
 8000d3c:	9304      	str	r3, [sp, #16]
 8000d3e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d42:	4829      	ldr	r0, [pc, #164]	@ (8000de8 <_vfiprintf_r+0x220>)
 8000d44:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000d48:	2206      	movs	r2, #6
 8000d4a:	f7ff fa41 	bl	80001d0 <memchr>
 8000d4e:	2800      	cmp	r0, #0
 8000d50:	d03f      	beq.n	8000dd2 <_vfiprintf_r+0x20a>
 8000d52:	4b26      	ldr	r3, [pc, #152]	@ (8000dec <_vfiprintf_r+0x224>)
 8000d54:	bb1b      	cbnz	r3, 8000d9e <_vfiprintf_r+0x1d6>
 8000d56:	9b03      	ldr	r3, [sp, #12]
 8000d58:	3307      	adds	r3, #7
 8000d5a:	f023 0307 	bic.w	r3, r3, #7
 8000d5e:	3308      	adds	r3, #8
 8000d60:	9303      	str	r3, [sp, #12]
 8000d62:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000d64:	443b      	add	r3, r7
 8000d66:	9309      	str	r3, [sp, #36]	@ 0x24
 8000d68:	e76a      	b.n	8000c40 <_vfiprintf_r+0x78>
 8000d6a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000d6e:	460c      	mov	r4, r1
 8000d70:	2001      	movs	r0, #1
 8000d72:	e7a8      	b.n	8000cc6 <_vfiprintf_r+0xfe>
 8000d74:	2300      	movs	r3, #0
 8000d76:	3401      	adds	r4, #1
 8000d78:	9305      	str	r3, [sp, #20]
 8000d7a:	4619      	mov	r1, r3
 8000d7c:	f04f 0c0a 	mov.w	ip, #10
 8000d80:	4620      	mov	r0, r4
 8000d82:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000d86:	3a30      	subs	r2, #48	@ 0x30
 8000d88:	2a09      	cmp	r2, #9
 8000d8a:	d903      	bls.n	8000d94 <_vfiprintf_r+0x1cc>
 8000d8c:	2b00      	cmp	r3, #0
 8000d8e:	d0c6      	beq.n	8000d1e <_vfiprintf_r+0x156>
 8000d90:	9105      	str	r1, [sp, #20]
 8000d92:	e7c4      	b.n	8000d1e <_vfiprintf_r+0x156>
 8000d94:	fb0c 2101 	mla	r1, ip, r1, r2
 8000d98:	4604      	mov	r4, r0
 8000d9a:	2301      	movs	r3, #1
 8000d9c:	e7f0      	b.n	8000d80 <_vfiprintf_r+0x1b8>
 8000d9e:	ab03      	add	r3, sp, #12
 8000da0:	9300      	str	r3, [sp, #0]
 8000da2:	462a      	mov	r2, r5
 8000da4:	4b12      	ldr	r3, [pc, #72]	@ (8000df0 <_vfiprintf_r+0x228>)
 8000da6:	a904      	add	r1, sp, #16
 8000da8:	4630      	mov	r0, r6
 8000daa:	f3af 8000 	nop.w
 8000dae:	4607      	mov	r7, r0
 8000db0:	1c78      	adds	r0, r7, #1
 8000db2:	d1d6      	bne.n	8000d62 <_vfiprintf_r+0x19a>
 8000db4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000db6:	07d9      	lsls	r1, r3, #31
 8000db8:	d405      	bmi.n	8000dc6 <_vfiprintf_r+0x1fe>
 8000dba:	89ab      	ldrh	r3, [r5, #12]
 8000dbc:	059a      	lsls	r2, r3, #22
 8000dbe:	d402      	bmi.n	8000dc6 <_vfiprintf_r+0x1fe>
 8000dc0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000dc2:	f7ff fddd 	bl	8000980 <__retarget_lock_release_recursive>
 8000dc6:	89ab      	ldrh	r3, [r5, #12]
 8000dc8:	065b      	lsls	r3, r3, #25
 8000dca:	f53f af1f 	bmi.w	8000c0c <_vfiprintf_r+0x44>
 8000dce:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000dd0:	e71e      	b.n	8000c10 <_vfiprintf_r+0x48>
 8000dd2:	ab03      	add	r3, sp, #12
 8000dd4:	9300      	str	r3, [sp, #0]
 8000dd6:	462a      	mov	r2, r5
 8000dd8:	4b05      	ldr	r3, [pc, #20]	@ (8000df0 <_vfiprintf_r+0x228>)
 8000dda:	a904      	add	r1, sp, #16
 8000ddc:	4630      	mov	r0, r6
 8000dde:	f000 f879 	bl	8000ed4 <_printf_i>
 8000de2:	e7e4      	b.n	8000dae <_vfiprintf_r+0x1e6>
 8000de4:	080013c2 	.word	0x080013c2
 8000de8:	080013cc 	.word	0x080013cc
 8000dec:	00000000 	.word	0x00000000
 8000df0:	08000ba3 	.word	0x08000ba3
 8000df4:	080013c8 	.word	0x080013c8

08000df8 <_printf_common>:
 8000df8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000dfc:	4616      	mov	r6, r2
 8000dfe:	4698      	mov	r8, r3
 8000e00:	688a      	ldr	r2, [r1, #8]
 8000e02:	690b      	ldr	r3, [r1, #16]
 8000e04:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000e08:	4293      	cmp	r3, r2
 8000e0a:	bfb8      	it	lt
 8000e0c:	4613      	movlt	r3, r2
 8000e0e:	6033      	str	r3, [r6, #0]
 8000e10:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000e14:	4607      	mov	r7, r0
 8000e16:	460c      	mov	r4, r1
 8000e18:	b10a      	cbz	r2, 8000e1e <_printf_common+0x26>
 8000e1a:	3301      	adds	r3, #1
 8000e1c:	6033      	str	r3, [r6, #0]
 8000e1e:	6823      	ldr	r3, [r4, #0]
 8000e20:	0699      	lsls	r1, r3, #26
 8000e22:	bf42      	ittt	mi
 8000e24:	6833      	ldrmi	r3, [r6, #0]
 8000e26:	3302      	addmi	r3, #2
 8000e28:	6033      	strmi	r3, [r6, #0]
 8000e2a:	6825      	ldr	r5, [r4, #0]
 8000e2c:	f015 0506 	ands.w	r5, r5, #6
 8000e30:	d106      	bne.n	8000e40 <_printf_common+0x48>
 8000e32:	f104 0a19 	add.w	sl, r4, #25
 8000e36:	68e3      	ldr	r3, [r4, #12]
 8000e38:	6832      	ldr	r2, [r6, #0]
 8000e3a:	1a9b      	subs	r3, r3, r2
 8000e3c:	42ab      	cmp	r3, r5
 8000e3e:	dc26      	bgt.n	8000e8e <_printf_common+0x96>
 8000e40:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000e44:	6822      	ldr	r2, [r4, #0]
 8000e46:	3b00      	subs	r3, #0
 8000e48:	bf18      	it	ne
 8000e4a:	2301      	movne	r3, #1
 8000e4c:	0692      	lsls	r2, r2, #26
 8000e4e:	d42b      	bmi.n	8000ea8 <_printf_common+0xb0>
 8000e50:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000e54:	4641      	mov	r1, r8
 8000e56:	4638      	mov	r0, r7
 8000e58:	47c8      	blx	r9
 8000e5a:	3001      	adds	r0, #1
 8000e5c:	d01e      	beq.n	8000e9c <_printf_common+0xa4>
 8000e5e:	6823      	ldr	r3, [r4, #0]
 8000e60:	6922      	ldr	r2, [r4, #16]
 8000e62:	f003 0306 	and.w	r3, r3, #6
 8000e66:	2b04      	cmp	r3, #4
 8000e68:	bf02      	ittt	eq
 8000e6a:	68e5      	ldreq	r5, [r4, #12]
 8000e6c:	6833      	ldreq	r3, [r6, #0]
 8000e6e:	1aed      	subeq	r5, r5, r3
 8000e70:	68a3      	ldr	r3, [r4, #8]
 8000e72:	bf0c      	ite	eq
 8000e74:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000e78:	2500      	movne	r5, #0
 8000e7a:	4293      	cmp	r3, r2
 8000e7c:	bfc4      	itt	gt
 8000e7e:	1a9b      	subgt	r3, r3, r2
 8000e80:	18ed      	addgt	r5, r5, r3
 8000e82:	2600      	movs	r6, #0
 8000e84:	341a      	adds	r4, #26
 8000e86:	42b5      	cmp	r5, r6
 8000e88:	d11a      	bne.n	8000ec0 <_printf_common+0xc8>
 8000e8a:	2000      	movs	r0, #0
 8000e8c:	e008      	b.n	8000ea0 <_printf_common+0xa8>
 8000e8e:	2301      	movs	r3, #1
 8000e90:	4652      	mov	r2, sl
 8000e92:	4641      	mov	r1, r8
 8000e94:	4638      	mov	r0, r7
 8000e96:	47c8      	blx	r9
 8000e98:	3001      	adds	r0, #1
 8000e9a:	d103      	bne.n	8000ea4 <_printf_common+0xac>
 8000e9c:	f04f 30ff 	mov.w	r0, #4294967295
 8000ea0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ea4:	3501      	adds	r5, #1
 8000ea6:	e7c6      	b.n	8000e36 <_printf_common+0x3e>
 8000ea8:	18e1      	adds	r1, r4, r3
 8000eaa:	1c5a      	adds	r2, r3, #1
 8000eac:	2030      	movs	r0, #48	@ 0x30
 8000eae:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000eb2:	4422      	add	r2, r4
 8000eb4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000eb8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000ebc:	3302      	adds	r3, #2
 8000ebe:	e7c7      	b.n	8000e50 <_printf_common+0x58>
 8000ec0:	2301      	movs	r3, #1
 8000ec2:	4622      	mov	r2, r4
 8000ec4:	4641      	mov	r1, r8
 8000ec6:	4638      	mov	r0, r7
 8000ec8:	47c8      	blx	r9
 8000eca:	3001      	adds	r0, #1
 8000ecc:	d0e6      	beq.n	8000e9c <_printf_common+0xa4>
 8000ece:	3601      	adds	r6, #1
 8000ed0:	e7d9      	b.n	8000e86 <_printf_common+0x8e>
	...

08000ed4 <_printf_i>:
 8000ed4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000ed8:	7e0f      	ldrb	r7, [r1, #24]
 8000eda:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000edc:	2f78      	cmp	r7, #120	@ 0x78
 8000ede:	4691      	mov	r9, r2
 8000ee0:	4680      	mov	r8, r0
 8000ee2:	460c      	mov	r4, r1
 8000ee4:	469a      	mov	sl, r3
 8000ee6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000eea:	d807      	bhi.n	8000efc <_printf_i+0x28>
 8000eec:	2f62      	cmp	r7, #98	@ 0x62
 8000eee:	d80a      	bhi.n	8000f06 <_printf_i+0x32>
 8000ef0:	2f00      	cmp	r7, #0
 8000ef2:	f000 80d1 	beq.w	8001098 <_printf_i+0x1c4>
 8000ef6:	2f58      	cmp	r7, #88	@ 0x58
 8000ef8:	f000 80b8 	beq.w	800106c <_printf_i+0x198>
 8000efc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000f00:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000f04:	e03a      	b.n	8000f7c <_printf_i+0xa8>
 8000f06:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000f0a:	2b15      	cmp	r3, #21
 8000f0c:	d8f6      	bhi.n	8000efc <_printf_i+0x28>
 8000f0e:	a101      	add	r1, pc, #4	@ (adr r1, 8000f14 <_printf_i+0x40>)
 8000f10:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000f14:	08000f6d 	.word	0x08000f6d
 8000f18:	08000f81 	.word	0x08000f81
 8000f1c:	08000efd 	.word	0x08000efd
 8000f20:	08000efd 	.word	0x08000efd
 8000f24:	08000efd 	.word	0x08000efd
 8000f28:	08000efd 	.word	0x08000efd
 8000f2c:	08000f81 	.word	0x08000f81
 8000f30:	08000efd 	.word	0x08000efd
 8000f34:	08000efd 	.word	0x08000efd
 8000f38:	08000efd 	.word	0x08000efd
 8000f3c:	08000efd 	.word	0x08000efd
 8000f40:	0800107f 	.word	0x0800107f
 8000f44:	08000fab 	.word	0x08000fab
 8000f48:	08001039 	.word	0x08001039
 8000f4c:	08000efd 	.word	0x08000efd
 8000f50:	08000efd 	.word	0x08000efd
 8000f54:	080010a1 	.word	0x080010a1
 8000f58:	08000efd 	.word	0x08000efd
 8000f5c:	08000fab 	.word	0x08000fab
 8000f60:	08000efd 	.word	0x08000efd
 8000f64:	08000efd 	.word	0x08000efd
 8000f68:	08001041 	.word	0x08001041
 8000f6c:	6833      	ldr	r3, [r6, #0]
 8000f6e:	1d1a      	adds	r2, r3, #4
 8000f70:	681b      	ldr	r3, [r3, #0]
 8000f72:	6032      	str	r2, [r6, #0]
 8000f74:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000f78:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000f7c:	2301      	movs	r3, #1
 8000f7e:	e09c      	b.n	80010ba <_printf_i+0x1e6>
 8000f80:	6833      	ldr	r3, [r6, #0]
 8000f82:	6820      	ldr	r0, [r4, #0]
 8000f84:	1d19      	adds	r1, r3, #4
 8000f86:	6031      	str	r1, [r6, #0]
 8000f88:	0606      	lsls	r6, r0, #24
 8000f8a:	d501      	bpl.n	8000f90 <_printf_i+0xbc>
 8000f8c:	681d      	ldr	r5, [r3, #0]
 8000f8e:	e003      	b.n	8000f98 <_printf_i+0xc4>
 8000f90:	0645      	lsls	r5, r0, #25
 8000f92:	d5fb      	bpl.n	8000f8c <_printf_i+0xb8>
 8000f94:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000f98:	2d00      	cmp	r5, #0
 8000f9a:	da03      	bge.n	8000fa4 <_printf_i+0xd0>
 8000f9c:	232d      	movs	r3, #45	@ 0x2d
 8000f9e:	426d      	negs	r5, r5
 8000fa0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000fa4:	4858      	ldr	r0, [pc, #352]	@ (8001108 <_printf_i+0x234>)
 8000fa6:	230a      	movs	r3, #10
 8000fa8:	e011      	b.n	8000fce <_printf_i+0xfa>
 8000faa:	6821      	ldr	r1, [r4, #0]
 8000fac:	6833      	ldr	r3, [r6, #0]
 8000fae:	0608      	lsls	r0, r1, #24
 8000fb0:	f853 5b04 	ldr.w	r5, [r3], #4
 8000fb4:	d402      	bmi.n	8000fbc <_printf_i+0xe8>
 8000fb6:	0649      	lsls	r1, r1, #25
 8000fb8:	bf48      	it	mi
 8000fba:	b2ad      	uxthmi	r5, r5
 8000fbc:	2f6f      	cmp	r7, #111	@ 0x6f
 8000fbe:	4852      	ldr	r0, [pc, #328]	@ (8001108 <_printf_i+0x234>)
 8000fc0:	6033      	str	r3, [r6, #0]
 8000fc2:	bf14      	ite	ne
 8000fc4:	230a      	movne	r3, #10
 8000fc6:	2308      	moveq	r3, #8
 8000fc8:	2100      	movs	r1, #0
 8000fca:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000fce:	6866      	ldr	r6, [r4, #4]
 8000fd0:	60a6      	str	r6, [r4, #8]
 8000fd2:	2e00      	cmp	r6, #0
 8000fd4:	db05      	blt.n	8000fe2 <_printf_i+0x10e>
 8000fd6:	6821      	ldr	r1, [r4, #0]
 8000fd8:	432e      	orrs	r6, r5
 8000fda:	f021 0104 	bic.w	r1, r1, #4
 8000fde:	6021      	str	r1, [r4, #0]
 8000fe0:	d04b      	beq.n	800107a <_printf_i+0x1a6>
 8000fe2:	4616      	mov	r6, r2
 8000fe4:	fbb5 f1f3 	udiv	r1, r5, r3
 8000fe8:	fb03 5711 	mls	r7, r3, r1, r5
 8000fec:	5dc7      	ldrb	r7, [r0, r7]
 8000fee:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000ff2:	462f      	mov	r7, r5
 8000ff4:	42bb      	cmp	r3, r7
 8000ff6:	460d      	mov	r5, r1
 8000ff8:	d9f4      	bls.n	8000fe4 <_printf_i+0x110>
 8000ffa:	2b08      	cmp	r3, #8
 8000ffc:	d10b      	bne.n	8001016 <_printf_i+0x142>
 8000ffe:	6823      	ldr	r3, [r4, #0]
 8001000:	07df      	lsls	r7, r3, #31
 8001002:	d508      	bpl.n	8001016 <_printf_i+0x142>
 8001004:	6923      	ldr	r3, [r4, #16]
 8001006:	6861      	ldr	r1, [r4, #4]
 8001008:	4299      	cmp	r1, r3
 800100a:	bfde      	ittt	le
 800100c:	2330      	movle	r3, #48	@ 0x30
 800100e:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001012:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001016:	1b92      	subs	r2, r2, r6
 8001018:	6122      	str	r2, [r4, #16]
 800101a:	f8cd a000 	str.w	sl, [sp]
 800101e:	464b      	mov	r3, r9
 8001020:	aa03      	add	r2, sp, #12
 8001022:	4621      	mov	r1, r4
 8001024:	4640      	mov	r0, r8
 8001026:	f7ff fee7 	bl	8000df8 <_printf_common>
 800102a:	3001      	adds	r0, #1
 800102c:	d14a      	bne.n	80010c4 <_printf_i+0x1f0>
 800102e:	f04f 30ff 	mov.w	r0, #4294967295
 8001032:	b004      	add	sp, #16
 8001034:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001038:	6823      	ldr	r3, [r4, #0]
 800103a:	f043 0320 	orr.w	r3, r3, #32
 800103e:	6023      	str	r3, [r4, #0]
 8001040:	4832      	ldr	r0, [pc, #200]	@ (800110c <_printf_i+0x238>)
 8001042:	2778      	movs	r7, #120	@ 0x78
 8001044:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8001048:	6823      	ldr	r3, [r4, #0]
 800104a:	6831      	ldr	r1, [r6, #0]
 800104c:	061f      	lsls	r7, r3, #24
 800104e:	f851 5b04 	ldr.w	r5, [r1], #4
 8001052:	d402      	bmi.n	800105a <_printf_i+0x186>
 8001054:	065f      	lsls	r7, r3, #25
 8001056:	bf48      	it	mi
 8001058:	b2ad      	uxthmi	r5, r5
 800105a:	6031      	str	r1, [r6, #0]
 800105c:	07d9      	lsls	r1, r3, #31
 800105e:	bf44      	itt	mi
 8001060:	f043 0320 	orrmi.w	r3, r3, #32
 8001064:	6023      	strmi	r3, [r4, #0]
 8001066:	b11d      	cbz	r5, 8001070 <_printf_i+0x19c>
 8001068:	2310      	movs	r3, #16
 800106a:	e7ad      	b.n	8000fc8 <_printf_i+0xf4>
 800106c:	4826      	ldr	r0, [pc, #152]	@ (8001108 <_printf_i+0x234>)
 800106e:	e7e9      	b.n	8001044 <_printf_i+0x170>
 8001070:	6823      	ldr	r3, [r4, #0]
 8001072:	f023 0320 	bic.w	r3, r3, #32
 8001076:	6023      	str	r3, [r4, #0]
 8001078:	e7f6      	b.n	8001068 <_printf_i+0x194>
 800107a:	4616      	mov	r6, r2
 800107c:	e7bd      	b.n	8000ffa <_printf_i+0x126>
 800107e:	6833      	ldr	r3, [r6, #0]
 8001080:	6825      	ldr	r5, [r4, #0]
 8001082:	6961      	ldr	r1, [r4, #20]
 8001084:	1d18      	adds	r0, r3, #4
 8001086:	6030      	str	r0, [r6, #0]
 8001088:	062e      	lsls	r6, r5, #24
 800108a:	681b      	ldr	r3, [r3, #0]
 800108c:	d501      	bpl.n	8001092 <_printf_i+0x1be>
 800108e:	6019      	str	r1, [r3, #0]
 8001090:	e002      	b.n	8001098 <_printf_i+0x1c4>
 8001092:	0668      	lsls	r0, r5, #25
 8001094:	d5fb      	bpl.n	800108e <_printf_i+0x1ba>
 8001096:	8019      	strh	r1, [r3, #0]
 8001098:	2300      	movs	r3, #0
 800109a:	6123      	str	r3, [r4, #16]
 800109c:	4616      	mov	r6, r2
 800109e:	e7bc      	b.n	800101a <_printf_i+0x146>
 80010a0:	6833      	ldr	r3, [r6, #0]
 80010a2:	1d1a      	adds	r2, r3, #4
 80010a4:	6032      	str	r2, [r6, #0]
 80010a6:	681e      	ldr	r6, [r3, #0]
 80010a8:	6862      	ldr	r2, [r4, #4]
 80010aa:	2100      	movs	r1, #0
 80010ac:	4630      	mov	r0, r6
 80010ae:	f7ff f88f 	bl	80001d0 <memchr>
 80010b2:	b108      	cbz	r0, 80010b8 <_printf_i+0x1e4>
 80010b4:	1b80      	subs	r0, r0, r6
 80010b6:	6060      	str	r0, [r4, #4]
 80010b8:	6863      	ldr	r3, [r4, #4]
 80010ba:	6123      	str	r3, [r4, #16]
 80010bc:	2300      	movs	r3, #0
 80010be:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80010c2:	e7aa      	b.n	800101a <_printf_i+0x146>
 80010c4:	6923      	ldr	r3, [r4, #16]
 80010c6:	4632      	mov	r2, r6
 80010c8:	4649      	mov	r1, r9
 80010ca:	4640      	mov	r0, r8
 80010cc:	47d0      	blx	sl
 80010ce:	3001      	adds	r0, #1
 80010d0:	d0ad      	beq.n	800102e <_printf_i+0x15a>
 80010d2:	6823      	ldr	r3, [r4, #0]
 80010d4:	079b      	lsls	r3, r3, #30
 80010d6:	d413      	bmi.n	8001100 <_printf_i+0x22c>
 80010d8:	68e0      	ldr	r0, [r4, #12]
 80010da:	9b03      	ldr	r3, [sp, #12]
 80010dc:	4298      	cmp	r0, r3
 80010de:	bfb8      	it	lt
 80010e0:	4618      	movlt	r0, r3
 80010e2:	e7a6      	b.n	8001032 <_printf_i+0x15e>
 80010e4:	2301      	movs	r3, #1
 80010e6:	4632      	mov	r2, r6
 80010e8:	4649      	mov	r1, r9
 80010ea:	4640      	mov	r0, r8
 80010ec:	47d0      	blx	sl
 80010ee:	3001      	adds	r0, #1
 80010f0:	d09d      	beq.n	800102e <_printf_i+0x15a>
 80010f2:	3501      	adds	r5, #1
 80010f4:	68e3      	ldr	r3, [r4, #12]
 80010f6:	9903      	ldr	r1, [sp, #12]
 80010f8:	1a5b      	subs	r3, r3, r1
 80010fa:	42ab      	cmp	r3, r5
 80010fc:	dcf2      	bgt.n	80010e4 <_printf_i+0x210>
 80010fe:	e7eb      	b.n	80010d8 <_printf_i+0x204>
 8001100:	2500      	movs	r5, #0
 8001102:	f104 0619 	add.w	r6, r4, #25
 8001106:	e7f5      	b.n	80010f4 <_printf_i+0x220>
 8001108:	080013d3 	.word	0x080013d3
 800110c:	080013e4 	.word	0x080013e4

08001110 <__sflush_r>:
 8001110:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001114:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001118:	0716      	lsls	r6, r2, #28
 800111a:	4605      	mov	r5, r0
 800111c:	460c      	mov	r4, r1
 800111e:	d454      	bmi.n	80011ca <__sflush_r+0xba>
 8001120:	684b      	ldr	r3, [r1, #4]
 8001122:	2b00      	cmp	r3, #0
 8001124:	dc02      	bgt.n	800112c <__sflush_r+0x1c>
 8001126:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001128:	2b00      	cmp	r3, #0
 800112a:	dd48      	ble.n	80011be <__sflush_r+0xae>
 800112c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800112e:	2e00      	cmp	r6, #0
 8001130:	d045      	beq.n	80011be <__sflush_r+0xae>
 8001132:	2300      	movs	r3, #0
 8001134:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001138:	682f      	ldr	r7, [r5, #0]
 800113a:	6a21      	ldr	r1, [r4, #32]
 800113c:	602b      	str	r3, [r5, #0]
 800113e:	d030      	beq.n	80011a2 <__sflush_r+0x92>
 8001140:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001142:	89a3      	ldrh	r3, [r4, #12]
 8001144:	0759      	lsls	r1, r3, #29
 8001146:	d505      	bpl.n	8001154 <__sflush_r+0x44>
 8001148:	6863      	ldr	r3, [r4, #4]
 800114a:	1ad2      	subs	r2, r2, r3
 800114c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800114e:	b10b      	cbz	r3, 8001154 <__sflush_r+0x44>
 8001150:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001152:	1ad2      	subs	r2, r2, r3
 8001154:	2300      	movs	r3, #0
 8001156:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001158:	6a21      	ldr	r1, [r4, #32]
 800115a:	4628      	mov	r0, r5
 800115c:	47b0      	blx	r6
 800115e:	1c43      	adds	r3, r0, #1
 8001160:	89a3      	ldrh	r3, [r4, #12]
 8001162:	d106      	bne.n	8001172 <__sflush_r+0x62>
 8001164:	6829      	ldr	r1, [r5, #0]
 8001166:	291d      	cmp	r1, #29
 8001168:	d82b      	bhi.n	80011c2 <__sflush_r+0xb2>
 800116a:	4a2a      	ldr	r2, [pc, #168]	@ (8001214 <__sflush_r+0x104>)
 800116c:	40ca      	lsrs	r2, r1
 800116e:	07d6      	lsls	r6, r2, #31
 8001170:	d527      	bpl.n	80011c2 <__sflush_r+0xb2>
 8001172:	2200      	movs	r2, #0
 8001174:	6062      	str	r2, [r4, #4]
 8001176:	04d9      	lsls	r1, r3, #19
 8001178:	6922      	ldr	r2, [r4, #16]
 800117a:	6022      	str	r2, [r4, #0]
 800117c:	d504      	bpl.n	8001188 <__sflush_r+0x78>
 800117e:	1c42      	adds	r2, r0, #1
 8001180:	d101      	bne.n	8001186 <__sflush_r+0x76>
 8001182:	682b      	ldr	r3, [r5, #0]
 8001184:	b903      	cbnz	r3, 8001188 <__sflush_r+0x78>
 8001186:	6560      	str	r0, [r4, #84]	@ 0x54
 8001188:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800118a:	602f      	str	r7, [r5, #0]
 800118c:	b1b9      	cbz	r1, 80011be <__sflush_r+0xae>
 800118e:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001192:	4299      	cmp	r1, r3
 8001194:	d002      	beq.n	800119c <__sflush_r+0x8c>
 8001196:	4628      	mov	r0, r5
 8001198:	f7ff fbf4 	bl	8000984 <_free_r>
 800119c:	2300      	movs	r3, #0
 800119e:	6363      	str	r3, [r4, #52]	@ 0x34
 80011a0:	e00d      	b.n	80011be <__sflush_r+0xae>
 80011a2:	2301      	movs	r3, #1
 80011a4:	4628      	mov	r0, r5
 80011a6:	47b0      	blx	r6
 80011a8:	4602      	mov	r2, r0
 80011aa:	1c50      	adds	r0, r2, #1
 80011ac:	d1c9      	bne.n	8001142 <__sflush_r+0x32>
 80011ae:	682b      	ldr	r3, [r5, #0]
 80011b0:	2b00      	cmp	r3, #0
 80011b2:	d0c6      	beq.n	8001142 <__sflush_r+0x32>
 80011b4:	2b1d      	cmp	r3, #29
 80011b6:	d001      	beq.n	80011bc <__sflush_r+0xac>
 80011b8:	2b16      	cmp	r3, #22
 80011ba:	d11e      	bne.n	80011fa <__sflush_r+0xea>
 80011bc:	602f      	str	r7, [r5, #0]
 80011be:	2000      	movs	r0, #0
 80011c0:	e022      	b.n	8001208 <__sflush_r+0xf8>
 80011c2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80011c6:	b21b      	sxth	r3, r3
 80011c8:	e01b      	b.n	8001202 <__sflush_r+0xf2>
 80011ca:	690f      	ldr	r7, [r1, #16]
 80011cc:	2f00      	cmp	r7, #0
 80011ce:	d0f6      	beq.n	80011be <__sflush_r+0xae>
 80011d0:	0793      	lsls	r3, r2, #30
 80011d2:	680e      	ldr	r6, [r1, #0]
 80011d4:	bf08      	it	eq
 80011d6:	694b      	ldreq	r3, [r1, #20]
 80011d8:	600f      	str	r7, [r1, #0]
 80011da:	bf18      	it	ne
 80011dc:	2300      	movne	r3, #0
 80011de:	eba6 0807 	sub.w	r8, r6, r7
 80011e2:	608b      	str	r3, [r1, #8]
 80011e4:	f1b8 0f00 	cmp.w	r8, #0
 80011e8:	dde9      	ble.n	80011be <__sflush_r+0xae>
 80011ea:	6a21      	ldr	r1, [r4, #32]
 80011ec:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80011ee:	4643      	mov	r3, r8
 80011f0:	463a      	mov	r2, r7
 80011f2:	4628      	mov	r0, r5
 80011f4:	47b0      	blx	r6
 80011f6:	2800      	cmp	r0, #0
 80011f8:	dc08      	bgt.n	800120c <__sflush_r+0xfc>
 80011fa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011fe:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001202:	81a3      	strh	r3, [r4, #12]
 8001204:	f04f 30ff 	mov.w	r0, #4294967295
 8001208:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800120c:	4407      	add	r7, r0
 800120e:	eba8 0800 	sub.w	r8, r8, r0
 8001212:	e7e7      	b.n	80011e4 <__sflush_r+0xd4>
 8001214:	20400001 	.word	0x20400001

08001218 <_fflush_r>:
 8001218:	b538      	push	{r3, r4, r5, lr}
 800121a:	690b      	ldr	r3, [r1, #16]
 800121c:	4605      	mov	r5, r0
 800121e:	460c      	mov	r4, r1
 8001220:	b913      	cbnz	r3, 8001228 <_fflush_r+0x10>
 8001222:	2500      	movs	r5, #0
 8001224:	4628      	mov	r0, r5
 8001226:	bd38      	pop	{r3, r4, r5, pc}
 8001228:	b118      	cbz	r0, 8001232 <_fflush_r+0x1a>
 800122a:	6a03      	ldr	r3, [r0, #32]
 800122c:	b90b      	cbnz	r3, 8001232 <_fflush_r+0x1a>
 800122e:	f7ff f9af 	bl	8000590 <__sinit>
 8001232:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001236:	2b00      	cmp	r3, #0
 8001238:	d0f3      	beq.n	8001222 <_fflush_r+0xa>
 800123a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800123c:	07d0      	lsls	r0, r2, #31
 800123e:	d404      	bmi.n	800124a <_fflush_r+0x32>
 8001240:	0599      	lsls	r1, r3, #22
 8001242:	d402      	bmi.n	800124a <_fflush_r+0x32>
 8001244:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001246:	f7ff fb9a 	bl	800097e <__retarget_lock_acquire_recursive>
 800124a:	4628      	mov	r0, r5
 800124c:	4621      	mov	r1, r4
 800124e:	f7ff ff5f 	bl	8001110 <__sflush_r>
 8001252:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001254:	07da      	lsls	r2, r3, #31
 8001256:	4605      	mov	r5, r0
 8001258:	d4e4      	bmi.n	8001224 <_fflush_r+0xc>
 800125a:	89a3      	ldrh	r3, [r4, #12]
 800125c:	059b      	lsls	r3, r3, #22
 800125e:	d4e1      	bmi.n	8001224 <_fflush_r+0xc>
 8001260:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001262:	f7ff fb8d 	bl	8000980 <__retarget_lock_release_recursive>
 8001266:	e7dd      	b.n	8001224 <_fflush_r+0xc>

08001268 <__swhatbuf_r>:
 8001268:	b570      	push	{r4, r5, r6, lr}
 800126a:	460c      	mov	r4, r1
 800126c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001270:	2900      	cmp	r1, #0
 8001272:	b096      	sub	sp, #88	@ 0x58
 8001274:	4615      	mov	r5, r2
 8001276:	461e      	mov	r6, r3
 8001278:	da0d      	bge.n	8001296 <__swhatbuf_r+0x2e>
 800127a:	89a3      	ldrh	r3, [r4, #12]
 800127c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001280:	f04f 0100 	mov.w	r1, #0
 8001284:	bf14      	ite	ne
 8001286:	2340      	movne	r3, #64	@ 0x40
 8001288:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800128c:	2000      	movs	r0, #0
 800128e:	6031      	str	r1, [r6, #0]
 8001290:	602b      	str	r3, [r5, #0]
 8001292:	b016      	add	sp, #88	@ 0x58
 8001294:	bd70      	pop	{r4, r5, r6, pc}
 8001296:	466a      	mov	r2, sp
 8001298:	f000 f848 	bl	800132c <_fstat_r>
 800129c:	2800      	cmp	r0, #0
 800129e:	dbec      	blt.n	800127a <__swhatbuf_r+0x12>
 80012a0:	9901      	ldr	r1, [sp, #4]
 80012a2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80012a6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80012aa:	4259      	negs	r1, r3
 80012ac:	4159      	adcs	r1, r3
 80012ae:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80012b2:	e7eb      	b.n	800128c <__swhatbuf_r+0x24>

080012b4 <__smakebuf_r>:
 80012b4:	898b      	ldrh	r3, [r1, #12]
 80012b6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80012b8:	079d      	lsls	r5, r3, #30
 80012ba:	4606      	mov	r6, r0
 80012bc:	460c      	mov	r4, r1
 80012be:	d507      	bpl.n	80012d0 <__smakebuf_r+0x1c>
 80012c0:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80012c4:	6023      	str	r3, [r4, #0]
 80012c6:	6123      	str	r3, [r4, #16]
 80012c8:	2301      	movs	r3, #1
 80012ca:	6163      	str	r3, [r4, #20]
 80012cc:	b003      	add	sp, #12
 80012ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012d0:	ab01      	add	r3, sp, #4
 80012d2:	466a      	mov	r2, sp
 80012d4:	f7ff ffc8 	bl	8001268 <__swhatbuf_r>
 80012d8:	9f00      	ldr	r7, [sp, #0]
 80012da:	4605      	mov	r5, r0
 80012dc:	4639      	mov	r1, r7
 80012de:	4630      	mov	r0, r6
 80012e0:	f7ff fbbc 	bl	8000a5c <_malloc_r>
 80012e4:	b948      	cbnz	r0, 80012fa <__smakebuf_r+0x46>
 80012e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012ea:	059a      	lsls	r2, r3, #22
 80012ec:	d4ee      	bmi.n	80012cc <__smakebuf_r+0x18>
 80012ee:	f023 0303 	bic.w	r3, r3, #3
 80012f2:	f043 0302 	orr.w	r3, r3, #2
 80012f6:	81a3      	strh	r3, [r4, #12]
 80012f8:	e7e2      	b.n	80012c0 <__smakebuf_r+0xc>
 80012fa:	89a3      	ldrh	r3, [r4, #12]
 80012fc:	6020      	str	r0, [r4, #0]
 80012fe:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001302:	81a3      	strh	r3, [r4, #12]
 8001304:	9b01      	ldr	r3, [sp, #4]
 8001306:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800130a:	b15b      	cbz	r3, 8001324 <__smakebuf_r+0x70>
 800130c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001310:	4630      	mov	r0, r6
 8001312:	f000 f81d 	bl	8001350 <_isatty_r>
 8001316:	b128      	cbz	r0, 8001324 <__smakebuf_r+0x70>
 8001318:	89a3      	ldrh	r3, [r4, #12]
 800131a:	f023 0303 	bic.w	r3, r3, #3
 800131e:	f043 0301 	orr.w	r3, r3, #1
 8001322:	81a3      	strh	r3, [r4, #12]
 8001324:	89a3      	ldrh	r3, [r4, #12]
 8001326:	431d      	orrs	r5, r3
 8001328:	81a5      	strh	r5, [r4, #12]
 800132a:	e7cf      	b.n	80012cc <__smakebuf_r+0x18>

0800132c <_fstat_r>:
 800132c:	b538      	push	{r3, r4, r5, lr}
 800132e:	4d07      	ldr	r5, [pc, #28]	@ (800134c <_fstat_r+0x20>)
 8001330:	2300      	movs	r3, #0
 8001332:	4604      	mov	r4, r0
 8001334:	4608      	mov	r0, r1
 8001336:	4611      	mov	r1, r2
 8001338:	602b      	str	r3, [r5, #0]
 800133a:	f7ff f814 	bl	8000366 <_fstat>
 800133e:	1c43      	adds	r3, r0, #1
 8001340:	d102      	bne.n	8001348 <_fstat_r+0x1c>
 8001342:	682b      	ldr	r3, [r5, #0]
 8001344:	b103      	cbz	r3, 8001348 <_fstat_r+0x1c>
 8001346:	6023      	str	r3, [r4, #0]
 8001348:	bd38      	pop	{r3, r4, r5, pc}
 800134a:	bf00      	nop
 800134c:	200001b8 	.word	0x200001b8

08001350 <_isatty_r>:
 8001350:	b538      	push	{r3, r4, r5, lr}
 8001352:	4d06      	ldr	r5, [pc, #24]	@ (800136c <_isatty_r+0x1c>)
 8001354:	2300      	movs	r3, #0
 8001356:	4604      	mov	r4, r0
 8001358:	4608      	mov	r0, r1
 800135a:	602b      	str	r3, [r5, #0]
 800135c:	f7ff f813 	bl	8000386 <_isatty>
 8001360:	1c43      	adds	r3, r0, #1
 8001362:	d102      	bne.n	800136a <_isatty_r+0x1a>
 8001364:	682b      	ldr	r3, [r5, #0]
 8001366:	b103      	cbz	r3, 800136a <_isatty_r+0x1a>
 8001368:	6023      	str	r3, [r4, #0]
 800136a:	bd38      	pop	{r3, r4, r5, pc}
 800136c:	200001b8 	.word	0x200001b8

08001370 <_sbrk_r>:
 8001370:	b538      	push	{r3, r4, r5, lr}
 8001372:	4d06      	ldr	r5, [pc, #24]	@ (800138c <_sbrk_r+0x1c>)
 8001374:	2300      	movs	r3, #0
 8001376:	4604      	mov	r4, r0
 8001378:	4608      	mov	r0, r1
 800137a:	602b      	str	r3, [r5, #0]
 800137c:	f7ff f81c 	bl	80003b8 <_sbrk>
 8001380:	1c43      	adds	r3, r0, #1
 8001382:	d102      	bne.n	800138a <_sbrk_r+0x1a>
 8001384:	682b      	ldr	r3, [r5, #0]
 8001386:	b103      	cbz	r3, 800138a <_sbrk_r+0x1a>
 8001388:	6023      	str	r3, [r4, #0]
 800138a:	bd38      	pop	{r3, r4, r5, pc}
 800138c:	200001b8 	.word	0x200001b8

08001390 <_init>:
 8001390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001392:	bf00      	nop
 8001394:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001396:	bc08      	pop	{r3}
 8001398:	469e      	mov	lr, r3
 800139a:	4770      	bx	lr

0800139c <_fini>:
 800139c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800139e:	bf00      	nop
 80013a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013a2:	bc08      	pop	{r3}
 80013a4:	469e      	mov	lr, r3
 80013a6:	4770      	bx	lr
